2024-07-03T16:00:33.895+07:00  INFO 26892 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 26892 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T16:00:33.916+07:00  INFO 26892 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T16:00:34.005+07:00  INFO 26892 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T16:00:34.005+07:00  INFO 26892 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T16:00:34.009+07:00  INFO 26892 --- [individual-service] [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\tuank\.gradle\caches\modules-2\files-2.1\org.apache.kafka\kafka-clients\3.7.0\b8f9f75bc3edc06f842dd16071465544198bc045\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/zstd-jni-1.5.5-6.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/lz4-java-1.8.0.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/snappy-java-1.1.10.5.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/slf4j-api-1.7.36.jar
2024-07-03T16:00:34.009+07:00  INFO 26892 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-03T16:00:34.009+07:00  INFO 26892 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-03T16:00:36.000+07:00  INFO 26892 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T16:00:36.003+07:00  INFO 26892 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T16:00:36.218+07:00  INFO 26892 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 200 ms. Found 10 JPA repository interfaces.
2024-07-03T16:00:36.242+07:00  INFO 26892 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T16:00:36.244+07:00  INFO 26892 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T16:00:36.266+07:00  INFO 26892 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:00:36.267+07:00  INFO 26892 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:00:36.267+07:00  INFO 26892 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:00:36.267+07:00  INFO 26892 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:00:36.267+07:00  INFO 26892 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:00:36.267+07:00  INFO 26892 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:00:36.267+07:00  INFO 26892 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:00:36.268+07:00  INFO 26892 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:00:36.268+07:00  INFO 26892 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:00:36.268+07:00  INFO 26892 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:00:36.268+07:00  INFO 26892 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-07-03T16:00:36.758+07:00  INFO 26892 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1f77ebc5-cb96-3f12-a34e-f72a531b12dd
2024-07-03T16:00:37.296+07:00  WARN 26892 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T16:00:37.301+07:00  WARN 26892 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T16:00:37.965+07:00  INFO 26892 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T16:00:37.983+07:00  INFO 26892 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T16:00:37.983+07:00  INFO 26892 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T16:00:38.084+07:00  INFO 26892 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T16:00:38.084+07:00  INFO 26892 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4074 ms
2024-07-03T16:00:39.446+07:00  INFO 26892 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T16:00:39.485+07:00  INFO 26892 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-03T16:00:39.709+07:00  INFO 26892 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@70fb3787
2024-07-03T16:00:39.712+07:00  INFO 26892 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-03T16:00:42.654+07:00  INFO 26892 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T16:00:43.412+07:00  INFO 26892 --- [individual-service] [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-03T16:00:44.977+07:00  WARN 26892 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T16:00:45.119+07:00  INFO 26892 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T16:00:45.183+07:00  INFO 26892 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T16:00:47.037+07:00  INFO 26892 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T16:00:47.100+07:00  WARN 26892 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T16:00:47.126+07:00  INFO 26892 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T16:00:47.233+07:00  INFO 26892 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T16:00:47.273+07:00  INFO 26892 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T16:00:47.276+07:00  INFO 26892 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T16:00:47.298+07:00  INFO 26892 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T16:00:47.298+07:00  INFO 26892 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T16:00:47.298+07:00  INFO 26892 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T16:00:47.298+07:00  INFO 26892 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T16:00:47.298+07:00  INFO 26892 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T16:00:47.298+07:00  INFO 26892 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T16:00:47.298+07:00  INFO 26892 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T16:00:47.374+07:00  INFO 26892 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T16:00:47.376+07:00  INFO 26892 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T16:00:47.378+07:00  INFO 26892 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T16:00:47.384+07:00  INFO 26892 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1719997247384 with initial instances count: 5
2024-07-03T16:00:47.393+07:00  INFO 26892 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T16:00:47.394+07:00  INFO 26892 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1719997247393, current=UP, previous=STARTING]
2024-07-03T16:00:47.395+07:00  INFO 26892 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T16:00:47.412+07:00  INFO 26892 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T16:00:47.413+07:00  INFO 26892 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T16:00:47.432+07:00  INFO 26892 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 15.72 seconds (process running for 17.23)
2024-07-03T16:00:47.445+07:00  INFO 26892 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T16:00:47.675+07:00  INFO 26892 --- [individual-service] [RMI TCP Connection(5)-172.16.100.12] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-03T16:02:08.496+07:00  WARN 26892 --- [individual-service] [http-nio-9002-exec-1] PageModule$PlainPageSerializationWarning : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2024-07-03T16:08:33.543+07:00  WARN 26892 --- [individual-service] [HikariPool-1 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=4m23s670ms50µs100ns).
2024-07-03T16:08:33.555+07:00  INFO 26892 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T16:08:33.661+07:00  INFO 26892 --- [individual-service] [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - Re-registering apps/INDIVIDUAL-SERVICE
2024-07-03T16:08:33.661+07:00  INFO 26892 --- [individual-service] [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T16:08:33.667+07:00  INFO 26892 --- [individual-service] [DiscoveryClient-HeartbeatExecutor-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T16:08:39.408+07:00  INFO 26892 --- [individual-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T16:08:39.408+07:00  INFO 26892 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1719997719408, current=DOWN, previous=UP]
2024-07-03T16:08:39.408+07:00  INFO 26892 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T16:08:39.422+07:00  INFO 26892 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T16:08:39.436+07:00  INFO 26892 --- [individual-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T16:08:39.440+07:00  INFO 26892 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-03T16:08:39.444+07:00  INFO 26892 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-03T16:08:39.445+07:00  INFO 26892 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T16:08:42.449+07:00  INFO 26892 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T16:08:42.474+07:00  INFO 26892 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T16:08:42.481+07:00  INFO 26892 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T16:08:50.631+07:00  INFO 25604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 25604 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T16:08:50.633+07:00  INFO 25604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T16:08:50.687+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T16:08:50.687+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T16:08:50.691+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\tuank\.gradle\caches\modules-2\files-2.1\org.apache.kafka\kafka-clients\3.7.0\b8f9f75bc3edc06f842dd16071465544198bc045\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/zstd-jni-1.5.5-6.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/lz4-java-1.8.0.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/snappy-java-1.1.10.5.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/slf4j-api-1.7.36.jar
2024-07-03T16:08:50.691+07:00  INFO 25604 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-03T16:08:50.691+07:00  INFO 25604 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-03T16:08:52.052+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T16:08:52.054+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T16:08:52.245+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 181 ms. Found 10 JPA repository interfaces.
2024-07-03T16:08:52.260+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T16:08:52.261+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T16:08:52.278+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:08:52.279+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:08:52.279+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:08:52.279+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:08:52.279+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:08:52.280+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:08:52.280+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:08:52.280+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:08:52.280+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:08:52.280+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:08:52.280+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-03T16:08:52.694+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1f77ebc5-cb96-3f12-a34e-f72a531b12dd
2024-07-03T16:08:53.190+07:00  WARN 25604 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T16:08:53.195+07:00  WARN 25604 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T16:08:53.721+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T16:08:53.737+07:00  INFO 25604 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T16:08:53.737+07:00  INFO 25604 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T16:08:53.808+07:00  INFO 25604 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T16:08:53.808+07:00  INFO 25604 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3116 ms
2024-07-03T16:08:54.854+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T16:08:54.893+07:00  INFO 25604 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-03T16:08:55.041+07:00  INFO 25604 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2f837f5f
2024-07-03T16:08:55.043+07:00  INFO 25604 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-03T16:08:57.145+07:00  INFO 25604 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T16:08:57.846+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-03T16:08:58.727+07:00  WARN 25604 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T16:08:58.865+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T16:08:58.941+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T16:09:00.821+07:00  INFO 25604 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T16:09:00.882+07:00  WARN 25604 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T16:09:00.910+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T16:09:01.048+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T16:09:01.087+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T16:09:01.092+07:00  INFO 25604 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T16:09:01.113+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T16:09:01.113+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T16:09:01.113+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T16:09:01.113+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T16:09:01.113+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T16:09:01.113+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T16:09:01.113+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T16:09:01.200+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T16:09:01.201+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T16:09:01.204+07:00  INFO 25604 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T16:09:01.208+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1719997741208 with initial instances count: 4
2024-07-03T16:09:01.217+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T16:09:01.219+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1719997741219, current=UP, previous=STARTING]
2024-07-03T16:09:01.222+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T16:09:01.241+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T16:09:01.243+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T16:09:01.261+07:00  INFO 25604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 11.976 seconds (process running for 13.085)
2024-07-03T16:09:01.275+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T16:09:01.680+07:00  INFO 25604 --- [individual-service] [RMI TCP Connection(1)-172.16.100.12] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-03T16:12:47.516+07:00  WARN 25604 --- [individual-service] [http-nio-9002-exec-2] PageModule$PlainPageSerializationWarning : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2024-07-03T16:14:01.124+07:00  INFO 25604 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T16:15:30.884+07:00  INFO 25604 --- [individual-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 102 class path changes (0 additions, 102 deletions, 0 modifications)
2024-07-03T16:15:30.891+07:00  INFO 25604 --- [individual-service] [Thread-5] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T16:15:30.891+07:00  INFO 25604 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1719998130891, current=DOWN, previous=UP]
2024-07-03T16:15:30.891+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T16:15:30.915+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T16:15:30.920+07:00  INFO 25604 --- [individual-service] [Thread-5] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T16:15:30.924+07:00  INFO 25604 --- [individual-service] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-03T16:15:30.931+07:00  INFO 25604 --- [individual-service] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-03T16:15:30.932+07:00  INFO 25604 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T16:15:33.938+07:00  WARN 25604 --- [individual-service] [DiscoveryClient-0] c.netflix.discovery.TimedSupervisorTask  : task supervisor shutting down, can't accept the task
2024-07-03T16:15:33.941+07:00  INFO 25604 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T16:15:33.962+07:00  INFO 25604 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T16:15:33.979+07:00  INFO 25604 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T16:15:34.216+07:00  INFO 25604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 25604 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T16:15:34.216+07:00  INFO 25604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T16:15:34.216+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T16:15:34.216+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T16:15:34.934+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T16:15:34.934+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T16:15:34.981+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 49 ms. Found 10 JPA repository interfaces.
2024-07-03T16:15:34.997+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T16:15:34.997+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T16:15:34.997+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:34.997+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:34.997+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:34.997+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:34.997+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:34.997+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:34.997+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:34.997+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:34.997+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:34.997+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:34.997+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-03T16:15:35.220+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1f77ebc5-cb96-3f12-a34e-f72a531b12dd
2024-07-03T16:15:35.298+07:00  WARN 25604 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T16:15:35.301+07:00  WARN 25604 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T16:15:35.498+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T16:15:35.516+07:00  INFO 25604 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T16:15:35.516+07:00  INFO 25604 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T16:15:35.597+07:00  INFO 25604 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T16:15:35.597+07:00  INFO 25604 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1381 ms
2024-07-03T16:15:35.904+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T16:15:35.906+07:00  INFO 25604 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2024-07-03T16:15:35.930+07:00  INFO 25604 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@307761fe
2024-07-03T16:15:35.930+07:00  INFO 25604 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2024-07-03T16:15:36.506+07:00  INFO 25604 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T16:15:37.005+07:00  WARN 25604 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T16:15:37.110+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T16:15:37.149+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T16:15:38.451+07:00  INFO 25604 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T16:15:38.498+07:00  WARN 25604 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T16:15:38.514+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T16:15:38.578+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T16:15:38.593+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T16:15:38.593+07:00  INFO 25604 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T16:15:38.593+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T16:15:38.593+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T16:15:38.593+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T16:15:38.593+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T16:15:38.593+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T16:15:38.593+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T16:15:38.593+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T16:15:38.648+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T16:15:38.651+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T16:15:38.652+07:00  INFO 25604 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T16:15:38.656+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1719998138656 with initial instances count: 5
2024-07-03T16:15:38.672+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T16:15:38.672+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1719998138672, current=UP, previous=STARTING]
2024-07-03T16:15:38.672+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T16:15:38.688+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T16:15:38.688+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T16:15:38.702+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T16:15:38.702+07:00  INFO 25604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 4.607 seconds (process running for 410.527)
2024-07-03T16:15:38.704+07:00  INFO 25604 --- [individual-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-07-03T16:15:39.963+07:00  INFO 25604 --- [individual-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 102 class path changes (102 additions, 0 deletions, 0 modifications)
2024-07-03T16:15:39.963+07:00  INFO 25604 --- [individual-service] [Thread-9] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T16:15:39.963+07:00  INFO 25604 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1719998139963, current=DOWN, previous=UP]
2024-07-03T16:15:39.963+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T16:15:39.990+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T16:15:40.012+07:00  INFO 25604 --- [individual-service] [Thread-9] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T16:15:40.017+07:00  INFO 25604 --- [individual-service] [Thread-9] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2024-07-03T16:15:40.026+07:00  INFO 25604 --- [individual-service] [Thread-9] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.
2024-07-03T16:15:40.028+07:00  INFO 25604 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T16:15:43.032+07:00  INFO 25604 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T16:15:43.051+07:00  INFO 25604 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T16:15:43.051+07:00  INFO 25604 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T16:15:43.262+07:00  INFO 25604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 25604 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T16:15:43.262+07:00  INFO 25604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T16:15:43.268+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T16:15:43.268+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T16:15:43.737+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T16:15:43.737+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T16:15:43.784+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 37 ms. Found 10 JPA repository interfaces.
2024-07-03T16:15:43.784+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T16:15:43.784+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T16:15:43.793+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:43.793+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:43.793+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:43.793+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:43.793+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:43.793+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:43.793+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:43.793+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:43.793+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:43.793+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:15:43.793+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-03T16:15:43.922+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1f77ebc5-cb96-3f12-a34e-f72a531b12dd
2024-07-03T16:15:43.965+07:00  WARN 25604 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T16:15:43.965+07:00  WARN 25604 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T16:15:44.106+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T16:15:44.106+07:00  INFO 25604 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T16:15:44.106+07:00  INFO 25604 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T16:15:44.185+07:00  INFO 25604 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T16:15:44.185+07:00  INFO 25604 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 917 ms
2024-07-03T16:15:44.456+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T16:15:44.457+07:00  INFO 25604 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Starting...
2024-07-03T16:15:44.492+07:00  INFO 25604 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-3 - Added connection org.postgresql.jdbc.PgConnection@5d9a8cbc
2024-07-03T16:15:44.492+07:00  INFO 25604 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Start completed.
2024-07-03T16:15:45.036+07:00  INFO 25604 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T16:15:45.687+07:00  WARN 25604 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T16:15:45.799+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T16:15:45.826+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T16:15:47.081+07:00  INFO 25604 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T16:15:47.139+07:00  WARN 25604 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T16:15:47.174+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T16:15:47.232+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T16:15:47.236+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T16:15:47.236+07:00  INFO 25604 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T16:15:47.237+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T16:15:47.237+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T16:15:47.237+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T16:15:47.238+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T16:15:47.238+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T16:15:47.238+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T16:15:47.238+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T16:15:47.273+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T16:15:47.274+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T16:15:47.275+07:00  INFO 25604 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T16:15:47.276+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1719998147276 with initial instances count: 5
2024-07-03T16:15:47.287+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T16:15:47.287+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1719998147287, current=UP, previous=STARTING]
2024-07-03T16:15:47.287+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T16:15:47.290+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T16:15:47.290+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T16:15:47.299+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T16:15:47.302+07:00  INFO 25604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 4.141 seconds (process running for 419.126)
2024-07-03T16:15:47.304+07:00  INFO 25604 --- [individual-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-07-03T16:19:15.760+07:00  INFO 25604 --- [individual-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 102 class path changes (0 additions, 102 deletions, 0 modifications)
2024-07-03T16:19:15.762+07:00  INFO 25604 --- [individual-service] [Thread-15] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T16:19:15.762+07:00  INFO 25604 --- [individual-service] [Thread-15] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1719998355762, current=DOWN, previous=UP]
2024-07-03T16:19:15.763+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T16:19:15.776+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T16:19:15.778+07:00  INFO 25604 --- [individual-service] [Thread-15] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T16:19:15.779+07:00  INFO 25604 --- [individual-service] [Thread-15] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown initiated...
2024-07-03T16:19:15.783+07:00  INFO 25604 --- [individual-service] [Thread-15] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown completed.
2024-07-03T16:19:15.784+07:00  INFO 25604 --- [individual-service] [Thread-15] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T16:19:18.802+07:00  WARN 25604 --- [individual-service] [DiscoveryClient-0] c.netflix.discovery.TimedSupervisorTask  : task supervisor shutting down, can't accept the task
2024-07-03T16:19:18.803+07:00  INFO 25604 --- [individual-service] [Thread-15] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T16:19:18.920+07:00  INFO 25604 --- [individual-service] [Thread-15] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T16:19:19.136+07:00  INFO 25604 --- [individual-service] [Thread-15] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T16:19:20.968+07:00  INFO 25604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 25604 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T16:19:20.968+07:00  INFO 25604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T16:19:20.971+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T16:19:20.971+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T16:19:21.463+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T16:19:21.463+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T16:19:21.495+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 32 ms. Found 10 JPA repository interfaces.
2024-07-03T16:19:21.500+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T16:19:21.500+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T16:19:21.507+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:21.508+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:21.508+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:21.508+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:21.508+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:21.508+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:21.508+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:21.508+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:21.508+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:21.508+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:21.509+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-03T16:19:21.643+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1f77ebc5-cb96-3f12-a34e-f72a531b12dd
2024-07-03T16:19:21.698+07:00  WARN 25604 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T16:19:21.700+07:00  WARN 25604 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T16:19:21.860+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T16:19:21.861+07:00  INFO 25604 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T16:19:21.861+07:00  INFO 25604 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T16:19:21.932+07:00  INFO 25604 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T16:19:21.932+07:00  INFO 25604 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 961 ms
2024-07-03T16:19:22.171+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T16:19:22.173+07:00  INFO 25604 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Starting...
2024-07-03T16:19:22.202+07:00  INFO 25604 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-4 - Added connection org.postgresql.jdbc.PgConnection@7c73028c
2024-07-03T16:19:22.203+07:00  INFO 25604 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Start completed.
2024-07-03T16:19:22.660+07:00  INFO 25604 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T16:19:23.168+07:00  WARN 25604 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T16:19:23.255+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T16:19:23.292+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T16:19:24.359+07:00  INFO 25604 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T16:19:24.403+07:00  WARN 25604 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T16:19:24.421+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T16:19:24.471+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T16:19:24.482+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T16:19:24.483+07:00  INFO 25604 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T16:19:24.491+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T16:19:24.491+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T16:19:24.491+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T16:19:24.491+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T16:19:24.491+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T16:19:24.491+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T16:19:24.491+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T16:19:24.549+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T16:19:24.550+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T16:19:24.550+07:00  INFO 25604 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T16:19:24.552+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1719998364552 with initial instances count: 5
2024-07-03T16:19:24.561+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T16:19:24.561+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1719998364561, current=UP, previous=STARTING]
2024-07-03T16:19:24.561+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T16:19:24.564+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T16:19:24.565+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T16:19:24.576+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T16:19:24.582+07:00  INFO 25604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 4.727 seconds (process running for 636.405)
2024-07-03T16:19:24.585+07:00  INFO 25604 --- [individual-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-07-03T16:19:25.793+07:00  INFO 25604 --- [individual-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 102 class path changes (102 additions, 0 deletions, 0 modifications)
2024-07-03T16:19:25.794+07:00  INFO 25604 --- [individual-service] [Thread-21] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T16:19:25.794+07:00  INFO 25604 --- [individual-service] [Thread-21] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1719998365794, current=DOWN, previous=UP]
2024-07-03T16:19:25.794+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T16:19:25.799+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T16:19:25.807+07:00  INFO 25604 --- [individual-service] [Thread-21] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T16:19:25.808+07:00  INFO 25604 --- [individual-service] [Thread-21] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown initiated...
2024-07-03T16:19:25.812+07:00  INFO 25604 --- [individual-service] [Thread-21] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown completed.
2024-07-03T16:19:25.812+07:00  INFO 25604 --- [individual-service] [Thread-21] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T16:19:28.825+07:00  INFO 25604 --- [individual-service] [Thread-21] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T16:19:28.844+07:00  INFO 25604 --- [individual-service] [Thread-21] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T16:19:28.849+07:00  INFO 25604 --- [individual-service] [Thread-21] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T16:19:29.091+07:00  INFO 25604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 25604 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T16:19:29.092+07:00  INFO 25604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T16:19:29.092+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T16:19:29.092+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T16:19:29.606+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T16:19:29.606+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T16:19:29.638+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 36 ms. Found 10 JPA repository interfaces.
2024-07-03T16:19:29.638+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T16:19:29.638+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T16:19:29.653+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:29.653+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:29.653+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:29.653+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:29.653+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:29.653+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:29.653+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:29.653+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:29.653+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:29.653+07:00  INFO 25604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:19:29.653+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-03T16:19:29.779+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1f77ebc5-cb96-3f12-a34e-f72a531b12dd
2024-07-03T16:19:29.837+07:00  WARN 25604 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T16:19:29.837+07:00  WARN 25604 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T16:19:29.997+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T16:19:29.997+07:00  INFO 25604 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T16:19:29.997+07:00  INFO 25604 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T16:19:30.043+07:00  INFO 25604 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T16:19:30.043+07:00  INFO 25604 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 951 ms
2024-07-03T16:19:30.265+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T16:19:30.265+07:00  INFO 25604 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Starting...
2024-07-03T16:19:30.305+07:00  INFO 25604 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-5 - Added connection org.postgresql.jdbc.PgConnection@183e2053
2024-07-03T16:19:30.306+07:00  INFO 25604 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Start completed.
2024-07-03T16:19:30.737+07:00  INFO 25604 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T16:19:31.200+07:00  WARN 25604 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T16:19:31.294+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T16:19:31.325+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T16:19:32.340+07:00  INFO 25604 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T16:19:32.383+07:00  WARN 25604 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T16:19:32.387+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T16:19:32.434+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T16:19:32.450+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T16:19:32.450+07:00  INFO 25604 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T16:19:32.450+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T16:19:32.450+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T16:19:32.450+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T16:19:32.450+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T16:19:32.450+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T16:19:32.450+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T16:19:32.450+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T16:19:32.482+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T16:19:32.482+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T16:19:32.483+07:00  INFO 25604 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T16:19:32.484+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1719998372484 with initial instances count: 4
2024-07-03T16:19:32.490+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T16:19:32.490+07:00  INFO 25604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1719998372490, current=UP, previous=STARTING]
2024-07-03T16:19:32.490+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T16:19:32.490+07:00  INFO 25604 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T16:19:32.490+07:00  INFO 25604 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T16:19:32.504+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T16:19:32.507+07:00  INFO 25604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 3.531 seconds (process running for 644.331)
2024-07-03T16:19:32.509+07:00  INFO 25604 --- [individual-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-07-03T16:20:13.066+07:00  INFO 25604 --- [individual-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T16:20:13.066+07:00  INFO 25604 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1719998413066, current=DOWN, previous=UP]
2024-07-03T16:20:13.067+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T16:20:13.081+07:00  INFO 25604 --- [individual-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T16:20:13.082+07:00  INFO 25604 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Shutdown initiated...
2024-07-03T16:20:13.084+07:00  INFO 25604 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Shutdown completed.
2024-07-03T16:20:13.085+07:00  INFO 25604 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T16:20:13.085+07:00  INFO 25604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T16:20:13.086+07:00  INFO 25604 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T16:20:13.090+07:00  INFO 25604 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T16:20:13.093+07:00  INFO 25604 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T16:20:17.371+07:00  INFO 17036 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 17036 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T16:20:17.375+07:00  INFO 17036 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T16:20:17.438+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T16:20:17.438+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T16:20:17.444+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\tuank\.gradle\caches\modules-2\files-2.1\org.apache.kafka\kafka-clients\3.7.0\b8f9f75bc3edc06f842dd16071465544198bc045\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/zstd-jni-1.5.5-6.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/lz4-java-1.8.0.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/snappy-java-1.1.10.5.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/slf4j-api-1.7.36.jar
2024-07-03T16:20:17.444+07:00  INFO 17036 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-03T16:20:17.445+07:00  INFO 17036 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-03T16:20:18.979+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T16:20:18.980+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T16:20:19.178+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 183 ms. Found 10 JPA repository interfaces.
2024-07-03T16:20:19.196+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T16:20:19.198+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T16:20:19.214+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:20:19.214+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:20:19.214+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:20:19.215+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:20:19.215+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:20:19.215+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:20:19.215+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:20:19.215+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:20:19.215+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:20:19.215+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:20:19.216+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-03T16:20:19.610+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1f77ebc5-cb96-3f12-a34e-f72a531b12dd
2024-07-03T16:20:20.030+07:00  WARN 17036 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T16:20:20.034+07:00  WARN 17036 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T16:20:20.525+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T16:20:20.538+07:00  INFO 17036 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T16:20:20.538+07:00  INFO 17036 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T16:20:20.609+07:00  INFO 17036 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T16:20:20.610+07:00  INFO 17036 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3164 ms
2024-07-03T16:20:21.652+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T16:20:21.686+07:00  INFO 17036 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-03T16:20:21.864+07:00  INFO 17036 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@b744b15
2024-07-03T16:20:21.868+07:00  INFO 17036 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-03T16:20:23.817+07:00  INFO 17036 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T16:20:24.560+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-03T16:20:25.586+07:00  WARN 17036 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T16:20:25.759+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T16:20:25.853+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T16:20:27.692+07:00  INFO 17036 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T16:20:27.751+07:00  WARN 17036 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T16:20:27.777+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T16:20:27.919+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T16:20:27.976+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T16:20:27.979+07:00  INFO 17036 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T16:20:28.002+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T16:20:28.003+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T16:20:28.003+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T16:20:28.003+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T16:20:28.003+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T16:20:28.003+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T16:20:28.003+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T16:20:28.156+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T16:20:28.159+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T16:20:28.161+07:00  INFO 17036 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T16:20:28.169+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1719998428169 with initial instances count: 5
2024-07-03T16:20:28.180+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T16:20:28.180+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1719998428180, current=UP, previous=STARTING]
2024-07-03T16:20:28.182+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T16:20:28.198+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T16:20:28.200+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T16:20:28.217+07:00  INFO 17036 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 12.177 seconds (process running for 13.254)
2024-07-03T16:20:28.228+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T16:20:28.472+07:00  INFO 17036 --- [individual-service] [RMI TCP Connection(2)-172.16.100.12] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-03T16:25:28.015+07:00  INFO 17036 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T16:28:04.812+07:00  WARN 17036 --- [individual-service] [http-nio-9002-exec-5] PageModule$PlainPageSerializationWarning : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2024-07-03T16:30:28.031+07:00  INFO 17036 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T16:35:28.033+07:00  INFO 17036 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T16:40:28.045+07:00  INFO 17036 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T16:45:28.054+07:00  INFO 17036 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T16:50:28.063+07:00  INFO 17036 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T16:55:28.071+07:00  INFO 17036 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T16:55:38.928+07:00  INFO 17036 --- [individual-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 102 class path changes (0 additions, 102 deletions, 0 modifications)
2024-07-03T16:55:38.928+07:00  INFO 17036 --- [individual-service] [Thread-5] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T16:55:38.928+07:00  INFO 17036 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720000538928, current=DOWN, previous=UP]
2024-07-03T16:55:38.928+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T16:55:38.950+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T16:55:38.961+07:00  INFO 17036 --- [individual-service] [Thread-5] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T16:55:38.966+07:00  INFO 17036 --- [individual-service] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-03T16:55:38.974+07:00  INFO 17036 --- [individual-service] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-03T16:55:38.974+07:00  INFO 17036 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T16:55:42.058+07:00  INFO 17036 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T16:55:42.068+07:00  INFO 17036 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T16:55:42.074+07:00  INFO 17036 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T16:55:42.838+07:00  INFO 17036 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 17036 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T16:55:42.840+07:00  INFO 17036 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T16:55:42.846+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T16:55:42.847+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T16:55:43.680+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T16:55:43.681+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T16:55:43.718+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 37 ms. Found 10 JPA repository interfaces.
2024-07-03T16:55:43.720+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T16:55:43.720+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T16:55:43.726+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:43.726+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:43.726+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:43.726+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:43.726+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:43.726+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:43.726+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:43.727+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:43.727+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:43.727+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:43.727+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-03T16:55:43.872+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1f77ebc5-cb96-3f12-a34e-f72a531b12dd
2024-07-03T16:55:43.947+07:00  WARN 17036 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T16:55:43.949+07:00  WARN 17036 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T16:55:44.110+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T16:55:44.113+07:00  INFO 17036 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T16:55:44.113+07:00  INFO 17036 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T16:55:44.172+07:00  INFO 17036 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T16:55:44.173+07:00  INFO 17036 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1326 ms
2024-07-03T16:55:44.421+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T16:55:44.428+07:00  INFO 17036 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2024-07-03T16:55:44.454+07:00  INFO 17036 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@2da978f9
2024-07-03T16:55:44.455+07:00  INFO 17036 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2024-07-03T16:55:45.115+07:00  INFO 17036 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T16:55:45.657+07:00  WARN 17036 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T16:55:45.740+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T16:55:45.775+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T16:55:47.148+07:00  INFO 17036 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T16:55:47.195+07:00  WARN 17036 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T16:55:47.217+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T16:55:47.309+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T16:55:47.321+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T16:55:47.322+07:00  INFO 17036 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T16:55:47.337+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T16:55:47.342+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T16:55:47.343+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T16:55:47.343+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T16:55:47.344+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T16:55:47.345+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T16:55:47.345+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T16:55:47.453+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T16:55:47.454+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T16:55:47.456+07:00  INFO 17036 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T16:55:47.458+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720000547458 with initial instances count: 5
2024-07-03T16:55:47.471+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T16:55:47.472+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720000547472, current=UP, previous=STARTING]
2024-07-03T16:55:47.472+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T16:55:47.475+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T16:55:47.475+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T16:55:47.502+07:00  INFO 17036 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 5.247 seconds (process running for 2132.539)
2024-07-03T16:55:47.504+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T16:55:47.507+07:00  INFO 17036 --- [individual-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-07-03T16:55:48.550+07:00  INFO 17036 --- [individual-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 102 class path changes (102 additions, 0 deletions, 0 modifications)
2024-07-03T16:55:48.552+07:00  INFO 17036 --- [individual-service] [Thread-9] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T16:55:48.553+07:00  INFO 17036 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720000548553, current=DOWN, previous=UP]
2024-07-03T16:55:48.553+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T16:55:48.559+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T16:55:48.565+07:00  INFO 17036 --- [individual-service] [Thread-9] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T16:55:48.566+07:00  INFO 17036 --- [individual-service] [Thread-9] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2024-07-03T16:55:48.570+07:00  INFO 17036 --- [individual-service] [Thread-9] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.
2024-07-03T16:55:48.571+07:00  INFO 17036 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T16:55:51.583+07:00  INFO 17036 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T16:55:51.600+07:00  INFO 17036 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T16:55:51.602+07:00  INFO 17036 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T16:55:51.860+07:00  INFO 17036 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 17036 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T16:55:51.861+07:00  INFO 17036 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T16:55:51.866+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T16:55:51.866+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T16:55:52.363+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T16:55:52.363+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T16:55:52.400+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 37 ms. Found 10 JPA repository interfaces.
2024-07-03T16:55:52.406+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T16:55:52.406+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T16:55:52.412+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:52.412+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:52.412+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:52.412+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:52.412+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:52.412+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:52.413+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:52.413+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:52.413+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:52.413+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T16:55:52.413+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-03T16:55:52.539+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1f77ebc5-cb96-3f12-a34e-f72a531b12dd
2024-07-03T16:55:52.591+07:00  WARN 17036 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T16:55:52.592+07:00  WARN 17036 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T16:55:52.734+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T16:55:52.735+07:00  INFO 17036 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T16:55:52.735+07:00  INFO 17036 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T16:55:52.785+07:00  INFO 17036 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T16:55:52.785+07:00  INFO 17036 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 918 ms
2024-07-03T16:55:53.010+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T16:55:53.011+07:00  INFO 17036 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Starting...
2024-07-03T16:55:53.039+07:00  INFO 17036 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-3 - Added connection org.postgresql.jdbc.PgConnection@3313b57f
2024-07-03T16:55:53.040+07:00  INFO 17036 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Start completed.
2024-07-03T16:55:53.509+07:00  INFO 17036 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T16:55:54.031+07:00  WARN 17036 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T16:55:54.113+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T16:55:54.145+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T16:55:55.117+07:00  INFO 17036 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T16:55:55.156+07:00  WARN 17036 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T16:55:55.172+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T16:55:55.226+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T16:55:55.229+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T16:55:55.231+07:00  INFO 17036 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T16:55:55.232+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T16:55:55.232+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T16:55:55.232+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T16:55:55.232+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T16:55:55.232+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T16:55:55.232+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T16:55:55.232+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T16:55:55.264+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T16:55:55.265+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T16:55:55.265+07:00  INFO 17036 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T16:55:55.265+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720000555265 with initial instances count: 5
2024-07-03T16:55:55.279+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T16:55:55.279+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720000555279, current=UP, previous=STARTING]
2024-07-03T16:55:55.279+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T16:55:55.281+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T16:55:55.282+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T16:55:55.292+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T16:55:55.293+07:00  INFO 17036 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 3.588 seconds (process running for 2140.329)
2024-07-03T16:55:55.295+07:00  INFO 17036 --- [individual-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-07-03T17:00:55.234+07:00  INFO 17036 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T17:03:18.923+07:00  INFO 17036 --- [individual-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 102 class path changes (0 additions, 102 deletions, 0 modifications)
2024-07-03T17:03:18.926+07:00  INFO 17036 --- [individual-service] [Thread-15] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T17:03:18.926+07:00  INFO 17036 --- [individual-service] [Thread-15] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720000998926, current=DOWN, previous=UP]
2024-07-03T17:03:18.926+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T17:03:18.937+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T17:03:18.941+07:00  INFO 17036 --- [individual-service] [Thread-15] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T17:03:18.943+07:00  INFO 17036 --- [individual-service] [Thread-15] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown initiated...
2024-07-03T17:03:18.946+07:00  INFO 17036 --- [individual-service] [Thread-15] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown completed.
2024-07-03T17:03:18.947+07:00  INFO 17036 --- [individual-service] [Thread-15] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T17:03:21.957+07:00  INFO 17036 --- [individual-service] [Thread-15] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T17:03:22.044+07:00  INFO 17036 --- [individual-service] [Thread-15] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T17:03:22.106+07:00  INFO 17036 --- [individual-service] [Thread-15] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T17:03:25.419+07:00  INFO 17036 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 17036 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T17:03:25.419+07:00  INFO 17036 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T17:03:25.512+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T17:03:25.512+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T17:03:27.762+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T17:03:27.762+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T17:03:27.793+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 30 ms. Found 10 JPA repository interfaces.
2024-07-03T17:03:27.793+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T17:03:27.793+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T17:03:27.800+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:27.800+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:27.800+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:27.800+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:27.800+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:27.800+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:27.800+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:27.800+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:27.800+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:27.800+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:27.800+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-03T17:03:27.927+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1f77ebc5-cb96-3f12-a34e-f72a531b12dd
2024-07-03T17:03:27.982+07:00  WARN 17036 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T17:03:27.983+07:00  WARN 17036 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T17:03:28.136+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T17:03:28.136+07:00  INFO 17036 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T17:03:28.137+07:00  INFO 17036 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T17:03:28.169+07:00  INFO 17036 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T17:03:28.169+07:00  INFO 17036 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 2657 ms
2024-07-03T17:03:28.456+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T17:03:28.456+07:00  INFO 17036 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Starting...
2024-07-03T17:03:28.503+07:00  INFO 17036 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-4 - Added connection org.postgresql.jdbc.PgConnection@33958253
2024-07-03T17:03:28.503+07:00  INFO 17036 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Start completed.
2024-07-03T17:03:29.040+07:00  INFO 17036 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T17:03:29.535+07:00  WARN 17036 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T17:03:29.615+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T17:03:29.646+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T17:03:30.705+07:00  INFO 17036 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T17:03:30.737+07:00  WARN 17036 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T17:03:30.762+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T17:03:30.825+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T17:03:30.825+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T17:03:30.825+07:00  INFO 17036 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T17:03:30.835+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T17:03:30.835+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T17:03:30.835+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T17:03:30.835+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T17:03:30.835+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T17:03:30.835+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T17:03:30.835+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T17:03:30.883+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T17:03:30.884+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T17:03:30.885+07:00  INFO 17036 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T17:03:30.886+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720001010886 with initial instances count: 4
2024-07-03T17:03:30.892+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T17:03:30.892+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720001010892, current=UP, previous=STARTING]
2024-07-03T17:03:30.892+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T17:03:30.898+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T17:03:30.899+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T17:03:30.929+07:00  INFO 17036 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 8.303 seconds (process running for 2595.967)
2024-07-03T17:03:30.935+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T17:03:30.937+07:00  INFO 17036 --- [individual-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-07-03T17:03:32.187+07:00  INFO 17036 --- [individual-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 102 class path changes (102 additions, 0 deletions, 0 modifications)
2024-07-03T17:03:32.187+07:00  INFO 17036 --- [individual-service] [Thread-21] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T17:03:32.187+07:00  INFO 17036 --- [individual-service] [Thread-21] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720001012187, current=DOWN, previous=UP]
2024-07-03T17:03:32.187+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T17:03:32.205+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T17:03:32.235+07:00  INFO 17036 --- [individual-service] [Thread-21] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T17:03:32.235+07:00  INFO 17036 --- [individual-service] [Thread-21] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown initiated...
2024-07-03T17:03:32.252+07:00  INFO 17036 --- [individual-service] [Thread-21] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown completed.
2024-07-03T17:03:32.258+07:00  INFO 17036 --- [individual-service] [Thread-21] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T17:03:35.261+07:00  INFO 17036 --- [individual-service] [Thread-21] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T17:03:35.279+07:00  INFO 17036 --- [individual-service] [Thread-21] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T17:03:35.282+07:00  INFO 17036 --- [individual-service] [Thread-21] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T17:03:35.453+07:00  INFO 17036 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 17036 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T17:03:35.453+07:00  INFO 17036 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T17:03:35.455+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T17:03:35.455+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T17:03:35.879+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T17:03:35.879+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T17:03:35.909+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 30 ms. Found 10 JPA repository interfaces.
2024-07-03T17:03:35.911+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T17:03:35.911+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T17:03:35.917+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:35.917+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:35.917+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:35.917+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:35.917+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:35.917+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:35.917+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:35.917+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:35.917+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:35.917+07:00  INFO 17036 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:03:35.917+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-03T17:03:36.026+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1f77ebc5-cb96-3f12-a34e-f72a531b12dd
2024-07-03T17:03:36.093+07:00  WARN 17036 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T17:03:36.095+07:00  WARN 17036 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T17:03:36.216+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T17:03:36.216+07:00  INFO 17036 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T17:03:36.216+07:00  INFO 17036 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T17:03:36.247+07:00  INFO 17036 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T17:03:36.247+07:00  INFO 17036 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 792 ms
2024-07-03T17:03:36.546+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T17:03:36.546+07:00  INFO 17036 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Starting...
2024-07-03T17:03:36.582+07:00  INFO 17036 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-5 - Added connection org.postgresql.jdbc.PgConnection@25664c72
2024-07-03T17:03:36.750+07:00  INFO 17036 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Start completed.
2024-07-03T17:03:37.246+07:00  INFO 17036 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T17:03:37.722+07:00  WARN 17036 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T17:03:37.802+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T17:03:37.849+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T17:03:38.884+07:00  INFO 17036 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T17:03:38.919+07:00  WARN 17036 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T17:03:38.931+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T17:03:38.995+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T17:03:38.995+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T17:03:38.995+07:00  INFO 17036 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T17:03:38.995+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T17:03:38.995+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T17:03:38.995+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T17:03:38.995+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T17:03:38.995+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T17:03:38.995+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T17:03:38.995+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T17:03:39.052+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T17:03:39.053+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T17:03:39.054+07:00  INFO 17036 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T17:03:39.055+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720001019055 with initial instances count: 4
2024-07-03T17:03:39.068+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T17:03:39.068+07:00  INFO 17036 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720001019068, current=UP, previous=STARTING]
2024-07-03T17:03:39.069+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T17:03:39.072+07:00  INFO 17036 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T17:03:39.073+07:00  INFO 17036 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T17:03:39.088+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T17:03:39.091+07:00  INFO 17036 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 3.719 seconds (process running for 2604.127)
2024-07-03T17:03:39.092+07:00  INFO 17036 --- [individual-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-07-03T17:08:39.015+07:00  INFO 17036 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T17:12:23.495+07:00  INFO 17036 --- [individual-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T17:12:23.495+07:00  INFO 17036 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720001543495, current=DOWN, previous=UP]
2024-07-03T17:12:23.495+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T17:12:23.517+07:00  INFO 17036 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T17:12:23.525+07:00  INFO 17036 --- [individual-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T17:12:23.526+07:00  INFO 17036 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Shutdown initiated...
2024-07-03T17:12:23.530+07:00  INFO 17036 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Shutdown completed.
2024-07-03T17:12:23.532+07:00  INFO 17036 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T17:12:26.539+07:00  INFO 17036 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T17:12:26.562+07:00  INFO 17036 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T17:12:26.567+07:00  INFO 17036 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T17:12:33.753+07:00  INFO 24768 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 24768 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T17:12:33.759+07:00  INFO 24768 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T17:12:33.817+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T17:12:33.818+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T17:12:33.821+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\tuank\.gradle\caches\modules-2\files-2.1\org.apache.kafka\kafka-clients\3.7.0\b8f9f75bc3edc06f842dd16071465544198bc045\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/zstd-jni-1.5.5-6.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/lz4-java-1.8.0.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/snappy-java-1.1.10.5.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/slf4j-api-1.7.36.jar
2024-07-03T17:12:33.821+07:00  INFO 24768 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-03T17:12:33.821+07:00  INFO 24768 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-03T17:12:35.201+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T17:12:35.203+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T17:12:35.378+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 168 ms. Found 10 JPA repository interfaces.
2024-07-03T17:12:35.398+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T17:12:35.399+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T17:12:35.415+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:12:35.415+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:12:35.415+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:12:35.415+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:12:35.416+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:12:35.416+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:12:35.416+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:12:35.416+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:12:35.416+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:12:35.416+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:12:35.416+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-03T17:12:35.866+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1f77ebc5-cb96-3f12-a34e-f72a531b12dd
2024-07-03T17:12:36.376+07:00  WARN 24768 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T17:12:36.389+07:00  WARN 24768 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T17:12:36.996+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T17:12:37.010+07:00  INFO 24768 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T17:12:37.011+07:00  INFO 24768 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T17:12:37.086+07:00  INFO 24768 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T17:12:37.086+07:00  INFO 24768 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3264 ms
2024-07-03T17:12:38.253+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T17:12:38.289+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-03T17:12:38.456+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6f2d4da0
2024-07-03T17:12:38.458+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-03T17:12:40.724+07:00  INFO 24768 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T17:12:41.477+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-03T17:12:42.560+07:00  WARN 24768 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T17:12:42.699+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T17:12:42.780+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T17:12:44.745+07:00  INFO 24768 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T17:12:44.807+07:00  WARN 24768 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T17:12:44.832+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T17:12:44.973+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T17:12:45.035+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T17:12:45.038+07:00  INFO 24768 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T17:12:45.060+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T17:12:45.061+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T17:12:45.061+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T17:12:45.061+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T17:12:45.061+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T17:12:45.061+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T17:12:45.061+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T17:12:45.147+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T17:12:45.149+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T17:12:45.151+07:00  INFO 24768 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T17:12:45.156+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720001565155 with initial instances count: 4
2024-07-03T17:12:45.167+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T17:12:45.171+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720001565171, current=UP, previous=STARTING]
2024-07-03T17:12:45.174+07:00  INFO 24768 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T17:12:45.204+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T17:12:45.206+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T17:12:45.234+07:00  INFO 24768 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 13.053 seconds (process running for 14.154)
2024-07-03T17:12:45.247+07:00  INFO 24768 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T17:12:45.667+07:00  INFO 24768 --- [individual-service] [RMI TCP Connection(2)-172.16.100.12] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-03T17:17:45.063+07:00  INFO 24768 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T17:22:45.075+07:00  INFO 24768 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T17:27:45.084+07:00  INFO 24768 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T17:32:45.100+07:00  INFO 24768 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T17:37:45.110+07:00  INFO 24768 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T17:42:45.125+07:00  INFO 24768 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T17:42:52.045+07:00  INFO 24768 --- [individual-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 102 class path changes (0 additions, 102 deletions, 0 modifications)
2024-07-03T17:42:52.048+07:00  INFO 24768 --- [individual-service] [Thread-5] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T17:42:52.048+07:00  INFO 24768 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720003372048, current=DOWN, previous=UP]
2024-07-03T17:42:52.048+07:00  INFO 24768 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T17:42:52.059+07:00  INFO 24768 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T17:42:52.075+07:00  INFO 24768 --- [individual-service] [Thread-5] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T17:42:52.079+07:00  INFO 24768 --- [individual-service] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-03T17:42:52.083+07:00  INFO 24768 --- [individual-service] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-03T17:42:52.084+07:00  INFO 24768 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T17:42:55.090+07:00  INFO 24768 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T17:42:55.109+07:00  INFO 24768 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T17:42:55.117+07:00  INFO 24768 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T17:42:55.360+07:00  INFO 24768 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 24768 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T17:42:55.361+07:00  INFO 24768 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T17:42:55.365+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T17:42:55.365+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T17:42:55.963+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T17:42:55.963+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T17:42:56.000+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 36 ms. Found 10 JPA repository interfaces.
2024-07-03T17:42:56.003+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T17:42:56.003+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T17:42:56.008+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:42:56.008+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:42:56.008+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:42:56.008+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:42:56.008+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:42:56.009+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:42:56.009+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:42:56.009+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:42:56.009+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:42:56.009+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:42:56.009+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-03T17:42:56.164+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=e89fcade-12ba-320a-99b0-b4113e4ebae7
2024-07-03T17:42:56.235+07:00  WARN 24768 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T17:42:56.237+07:00  WARN 24768 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T17:42:56.415+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T17:42:56.418+07:00  INFO 24768 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T17:42:56.418+07:00  INFO 24768 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T17:42:56.486+07:00  INFO 24768 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T17:42:56.487+07:00  INFO 24768 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1122 ms
2024-07-03T17:42:56.741+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T17:42:56.753+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2024-07-03T17:42:56.806+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@3a720ff8
2024-07-03T17:42:56.806+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2024-07-03T17:42:56.849+07:00  INFO 24768 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T17:42:56.957+07:00  WARN 24768 --- [individual-service] [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'roleAspect' defined in file [C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main\com\kltn\individualservice\annotation\RoleAspect.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'roleServiceImpl' defined in file [C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main\com\kltn\individualservice\service\impl\RoleServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'roleRepository' defined in com.kltn.individualservice.repository.RoleRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Not a managed type: class com.kltn.individualservice.entity.Role
2024-07-03T17:42:56.957+07:00  INFO 24768 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T17:42:56.958+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2024-07-03T17:42:56.976+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.
2024-07-03T17:42:56.977+07:00  INFO 24768 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2024-07-03T17:42:56.988+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-03T17:42:57.023+07:00 ERROR 24768 --- [individual-service] [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'roleAspect' defined in file [C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main\com\kltn\individualservice\annotation\RoleAspect.class]: Unsatisfied dependency expressed through constructor parameter 1: Error creating bean with name 'roleServiceImpl' defined in file [C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main\com\kltn\individualservice\service\impl\RoleServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'roleRepository' defined in com.kltn.individualservice.repository.RoleRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Not a managed type: class com.kltn.individualservice.entity.Role
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1357) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1194) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) ~[spring-boot-3.3.0.jar:3.3.0]
	at com.kltn.individualservice.IndividualServiceApplication.main(IndividualServiceApplication.java:14) ~[main/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50) ~[spring-boot-devtools-3.3.0.jar:3.3.0]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'roleServiceImpl' defined in file [C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main\com\kltn\individualservice\service\impl\RoleServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'roleRepository' defined in com.kltn.individualservice.repository.RoleRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Not a managed type: class com.kltn.individualservice.entity.Role
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1357) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1194) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.8.jar:6.1.8]
	... 22 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'roleRepository' defined in com.kltn.individualservice.repository.RoleRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Not a managed type: class com.kltn.individualservice.entity.Role
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1788) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782) ~[spring-beans-6.1.8.jar:6.1.8]
	... 36 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class com.kltn.individualservice.entity.Role
	at org.hibernate.metamodel.model.domain.internal.JpaMetamodelImpl.managedType(JpaMetamodelImpl.java:194) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.managedType(MappingMetamodelImpl.java:469) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.managedType(MappingMetamodelImpl.java:99) ~[hibernate-core-6.5.2.Final.jar:6.5.2.Final]
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:82) ~[spring-data-jpa-3.3.0.jar:3.3.0]
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:69) ~[spring-data-jpa-3.3.0.jar:3.3.0]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:249) ~[spring-data-jpa-3.3.0.jar:3.3.0]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:214) ~[spring-data-jpa-3.3.0.jar:3.3.0]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:197) ~[spring-data-jpa-3.3.0.jar:3.3.0]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:1) ~[spring-data-jpa-3.3.0.jar:3.3.0]
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:317) ~[spring-data-commons-3.3.0.jar:3.3.0]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:286) ~[spring-data-commons-3.3.0.jar:3.3.0]
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135) ~[spring-data-commons-3.3.0.jar:3.3.0]
	at org.springframework.data.util.Lazy.get(Lazy.java:113) ~[spring-data-commons-3.3.0.jar:3.3.0]
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:292) ~[spring-data-commons-3.3.0.jar:3.3.0]
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132) ~[spring-data-jpa-3.3.0.jar:3.3.0]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784) ~[spring-beans-6.1.8.jar:6.1.8]
	... 47 common frames omitted

2024-07-03T17:42:59.672+07:00  INFO 24768 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 24768 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T17:42:59.672+07:00  INFO 24768 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T17:42:59.675+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T17:42:59.675+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T17:43:00.190+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T17:43:00.191+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T17:43:00.230+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 38 ms. Found 10 JPA repository interfaces.
2024-07-03T17:43:00.234+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T17:43:00.234+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T17:43:00.239+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:43:00.239+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:43:00.239+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:43:00.239+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:43:00.239+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:43:00.239+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:43:00.239+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:43:00.239+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:43:00.239+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:43:00.240+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:43:00.240+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-03T17:43:00.382+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=e89fcade-12ba-320a-99b0-b4113e4ebae7
2024-07-03T17:43:00.443+07:00  WARN 24768 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T17:43:00.445+07:00  WARN 24768 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T17:43:00.583+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T17:43:00.585+07:00  INFO 24768 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T17:43:00.585+07:00  INFO 24768 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T17:43:00.621+07:00  INFO 24768 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2024-07-03T17:43:00.621+07:00  INFO 24768 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 946 ms
2024-07-03T17:43:00.867+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T17:43:00.869+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Starting...
2024-07-03T17:43:00.902+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-3 - Added connection org.postgresql.jdbc.PgConnection@e4f1b6
2024-07-03T17:43:00.902+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Start completed.
2024-07-03T17:43:01.525+07:00  INFO 24768 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T17:43:02.085+07:00  WARN 24768 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T17:43:02.180+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T17:43:02.229+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T17:43:02.298+07:00  WARN 24768 --- [individual-service] [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'studentController' defined in file [C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main\com\kltn\individualservice\controller\StudentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'studentServiceImpl' defined in file [C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main\com\kltn\individualservice\service\impl\StudentServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'com.kltn.individualservice.service.UserService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-07-03T17:43:02.300+07:00  WARN 24768 --- [individual-service] [restartedMain] s.c.a.AnnotationConfigApplicationContext : Exception thrown from ApplicationListener handling ContextClosedEvent

org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'applicationTaskExecutor': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:265) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:222) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:145) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:457) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1130) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:114) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:637) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) ~[spring-boot-3.3.0.jar:3.3.0]
	at com.kltn.individualservice.IndividualServiceApplication.main(IndividualServiceApplication.java:14) ~[main/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50) ~[spring-boot-devtools-3.3.0.jar:3.3.0]

2024-07-03T17:43:02.301+07:00  INFO 24768 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T17:43:02.302+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown initiated...
2024-07-03T17:43:02.303+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown completed.
2024-07-03T17:43:02.304+07:00  INFO 24768 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2024-07-03T17:43:02.314+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-03T17:43:02.326+07:00 ERROR 24768 --- [individual-service] [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.kltn.individualservice.service.impl.StudentServiceImpl required a bean of type 'com.kltn.individualservice.service.UserService' that could not be found.


Action:

Consider defining a bean of type 'com.kltn.individualservice.service.UserService' in your configuration.

2024-07-03T17:52:42.597+07:00  INFO 24768 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 24768 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T17:52:42.597+07:00  INFO 24768 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T17:52:42.600+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T17:52:42.600+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T17:52:43.190+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T17:52:43.190+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T17:52:43.264+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 73 ms. Found 10 JPA repository interfaces.
2024-07-03T17:52:43.267+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T17:52:43.267+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T17:52:43.274+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:52:43.274+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:52:43.274+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:52:43.275+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:52:43.275+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:52:43.275+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:52:43.275+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:52:43.275+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:52:43.275+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:52:43.275+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:52:43.275+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2024-07-03T17:52:43.415+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=e68be5b0-1929-3cc5-9d63-173741b6b473
2024-07-03T17:52:43.477+07:00  WARN 24768 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T17:52:43.479+07:00  WARN 24768 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T17:52:43.605+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T17:52:43.606+07:00  INFO 24768 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T17:52:43.606+07:00  INFO 24768 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T17:52:43.643+07:00  INFO 24768 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat-2].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2024-07-03T17:52:43.643+07:00  INFO 24768 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1042 ms
2024-07-03T17:52:43.899+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T17:52:43.900+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Starting...
2024-07-03T17:52:43.928+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-4 - Added connection org.postgresql.jdbc.PgConnection@30a9dea7
2024-07-03T17:52:43.929+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Start completed.
2024-07-03T17:52:44.559+07:00  INFO 24768 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T17:52:44.643+07:00  WARN 24768 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T17:52:46.069+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T17:52:46.098+07:00  INFO 24768 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T17:52:46.146+07:00  WARN 24768 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T17:52:46.169+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T17:52:46.242+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T17:52:46.248+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T17:52:46.248+07:00  INFO 24768 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T17:52:46.261+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T17:52:46.261+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T17:52:46.261+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T17:52:46.262+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T17:52:46.262+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T17:52:46.262+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T17:52:46.262+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T17:52:46.381+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T17:52:46.385+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T17:52:46.387+07:00  INFO 24768 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T17:52:46.396+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720003966396 with initial instances count: 4
2024-07-03T17:52:46.415+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T17:52:46.415+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720003966415, current=UP, previous=STARTING]
2024-07-03T17:52:46.416+07:00  INFO 24768 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T17:52:46.420+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T17:52:46.421+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T17:52:46.431+07:00  INFO 24768 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T17:52:46.435+07:00  INFO 24768 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 3.96 seconds (process running for 2415.355)
2024-07-03T17:52:46.441+07:00  INFO 24768 --- [individual-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation delta:


==========================
CONDITION EVALUATION DELTA
==========================


Positive matches:
-----------------

   KafkaAutoConfiguration#kafkaProducerFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ProducerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTemplate matched:
      - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory matched:
      - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)
      - @ConditionalOnThreading found PLATFORM (OnThreadingCondition)

   RedisAutoConfiguration#redisTemplate matched:
      - @ConditionalOnSingleCandidate (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found a single bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate matched:
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory'; @ConditionalOnMissingBean (names: reactiveStringRedisTemplate; SearchStrategy: all) did not find any beans (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration matched:
      - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'reactor.core.publisher.Flux' (OnClassCondition)
      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)
      - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) found bean 'redisConnectionFactory' (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration#redisHealthContributor matched:
      - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver matched:
      - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   RedisHealthContributorAutoConfiguration#redisHealthContributor:
      Did not match:
         - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) found beans named redisHealthContributor (OnBeanCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    None



2024-07-03T17:53:29.409+07:00  INFO 24768 --- [individual-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 96 class path changes (0 additions, 96 deletions, 0 modifications)
2024-07-03T17:53:29.410+07:00  INFO 24768 --- [individual-service] [Thread-9] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T17:53:29.410+07:00  INFO 24768 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720004009410, current=DOWN, previous=UP]
2024-07-03T17:53:29.410+07:00  INFO 24768 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T17:53:29.425+07:00  INFO 24768 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T17:53:29.431+07:00  INFO 24768 --- [individual-service] [Thread-9] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T17:53:29.432+07:00  INFO 24768 --- [individual-service] [Thread-9] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown initiated...
2024-07-03T17:53:29.435+07:00  INFO 24768 --- [individual-service] [Thread-9] com.zaxxer.hikari.HikariDataSource       : HikariPool-4 - Shutdown completed.
2024-07-03T17:53:29.436+07:00  INFO 24768 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T17:53:32.448+07:00  INFO 24768 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T17:53:32.468+07:00  INFO 24768 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T17:53:32.471+07:00  INFO 24768 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T17:53:32.670+07:00  INFO 24768 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 24768 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T17:53:32.670+07:00  INFO 24768 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T17:53:32.673+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T17:53:32.673+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T17:53:33.132+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T17:53:33.132+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T17:53:33.163+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 30 ms. Found 10 JPA repository interfaces.
2024-07-03T17:53:33.166+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T17:53:33.166+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T17:53:33.170+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:53:33.170+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:53:33.170+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:53:33.170+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:53:33.170+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:53:33.170+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:53:33.170+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:53:33.171+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:53:33.171+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:53:33.171+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T17:53:33.171+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4 ms. Found 0 Redis repository interfaces.
2024-07-03T17:53:33.300+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=e89fcade-12ba-320a-99b0-b4113e4ebae7
2024-07-03T17:53:33.355+07:00  WARN 24768 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T17:53:33.357+07:00  WARN 24768 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T17:53:33.501+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T17:53:33.501+07:00  INFO 24768 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T17:53:33.501+07:00  INFO 24768 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T17:53:33.535+07:00  INFO 24768 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat-2].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2024-07-03T17:53:33.535+07:00  INFO 24768 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 862 ms
2024-07-03T17:53:33.876+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T17:53:33.877+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Starting...
2024-07-03T17:53:33.908+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-5 - Added connection org.postgresql.jdbc.PgConnection@6e37172e
2024-07-03T17:53:33.909+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Start completed.
2024-07-03T17:53:34.629+07:00  INFO 24768 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T17:53:35.154+07:00  WARN 24768 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T17:53:35.234+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T17:53:35.271+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T17:53:35.333+07:00  WARN 24768 --- [individual-service] [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'studentController' defined in file [C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main\com\kltn\individualservice\controller\StudentController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'studentServiceImpl' defined in file [C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main\com\kltn\individualservice\service\impl\StudentServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 1: No qualifying bean of type 'com.kltn.individualservice.service.UserService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-07-03T17:53:35.334+07:00  WARN 24768 --- [individual-service] [restartedMain] s.c.a.AnnotationConfigApplicationContext : Exception thrown from ApplicationListener handling ContextClosedEvent

org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'applicationTaskExecutor': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.context.event.AbstractApplicationEventMulticaster.retrieveApplicationListeners(AbstractApplicationEventMulticaster.java:265) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.event.AbstractApplicationEventMulticaster.getApplicationListeners(AbstractApplicationEventMulticaster.java:222) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:145) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:451) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:457) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:384) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1130) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:114) ~[spring-cloud-context-4.1.3.jar:4.1.3]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:637) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) ~[spring-boot-3.3.0.jar:3.3.0]
	at com.kltn.individualservice.IndividualServiceApplication.main(IndividualServiceApplication.java:14) ~[main/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50) ~[spring-boot-devtools-3.3.0.jar:3.3.0]

2024-07-03T17:53:35.336+07:00  INFO 24768 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T17:53:35.336+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Shutdown initiated...
2024-07-03T17:53:35.338+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-5 - Shutdown completed.
2024-07-03T17:53:35.338+07:00  INFO 24768 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2024-07-03T17:53:35.347+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-03T17:53:35.356+07:00 ERROR 24768 --- [individual-service] [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 1 of constructor in com.kltn.individualservice.service.impl.StudentServiceImpl required a bean of type 'com.kltn.individualservice.service.UserService' that could not be found.


Action:

Consider defining a bean of type 'com.kltn.individualservice.service.UserService' in your configuration.

2024-07-03T18:38:16.271+07:00  INFO 24768 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 24768 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T18:38:16.271+07:00  INFO 24768 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T18:38:16.274+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T18:38:16.274+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T18:38:16.806+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T18:38:16.806+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T18:38:16.885+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 78 ms. Found 10 JPA repository interfaces.
2024-07-03T18:38:16.891+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T18:38:16.891+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T18:38:16.901+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:16.902+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:16.902+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:16.902+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:16.902+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:16.902+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:16.902+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:16.902+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:16.902+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:16.902+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:16.902+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-07-03T18:38:17.031+07:00  WARN 24768 --- [individual-service] [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: java.lang.NullPointerException: Cannot read field "generatedClass" because "data" is null
2024-07-03T18:38:17.040+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-03T18:38:17.048+07:00 ERROR 24768 --- [individual-service] [restartedMain] o.s.boot.SpringApplication               : Application run failed

java.lang.NullPointerException: Cannot read field "generatedClass" because "data" is null
	at org.springframework.cglib.proxy.Enhancer.nextInstance(Enhancer.java:783) ~[spring-core-6.1.8.jar:6.1.8]
	at org.springframework.cglib.core.AbstractClassGenerator.create(AbstractClassGenerator.java:321) ~[spring-core-6.1.8.jar:6.1.8]
	at org.springframework.cglib.proxy.Enhancer.createHelper(Enhancer.java:562) ~[spring-core-6.1.8.jar:6.1.8]
	at org.springframework.cglib.proxy.Enhancer.createClass(Enhancer.java:407) ~[spring-core-6.1.8.jar:6.1.8]
	at org.springframework.context.annotation.ConfigurationClassEnhancer.createClass(ConfigurationClassEnhancer.java:147) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.annotation.ConfigurationClassEnhancer.enhance(ConfigurationClassEnhancer.java:112) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.enhanceConfigurationClasses(ConfigurationClassPostProcessor.java:534) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanFactory(ConfigurationClassPostProcessor.java:311) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:363) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:153) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:788) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:606) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363) ~[spring-boot-3.3.0.jar:3.3.0]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352) ~[spring-boot-3.3.0.jar:3.3.0]
	at com.kltn.individualservice.IndividualServiceApplication.main(IndividualServiceApplication.java:14) ~[main/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50) ~[spring-boot-devtools-3.3.0.jar:3.3.0]

2024-07-03T18:38:23.025+07:00  INFO 24768 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 24768 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T18:38:23.025+07:00  INFO 24768 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T18:38:23.169+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T18:38:23.169+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T18:38:23.871+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T18:38:23.871+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T18:38:23.924+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 52 ms. Found 10 JPA repository interfaces.
2024-07-03T18:38:23.928+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T18:38:23.928+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T18:38:23.936+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:23.936+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:23.936+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:23.937+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:23.937+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:23.937+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:23.937+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:23.937+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:23.937+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:23.937+07:00  INFO 24768 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:23.937+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-03T18:38:24.052+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=af9bf09b-d2a7-375a-b7fb-d5856cb9df81
2024-07-03T18:38:24.147+07:00  WARN 24768 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T18:38:24.147+07:00  WARN 24768 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T18:38:24.337+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T18:38:24.337+07:00  INFO 24768 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T18:38:24.337+07:00  INFO 24768 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T18:38:24.384+07:00  INFO 24768 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat-3].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2024-07-03T18:38:24.384+07:00  INFO 24768 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1190 ms
2024-07-03T18:38:24.661+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T18:38:24.662+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Starting...
2024-07-03T18:38:24.684+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-6 - Added connection org.postgresql.jdbc.PgConnection@79bfffe3
2024-07-03T18:38:24.685+07:00  INFO 24768 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Start completed.
2024-07-03T18:38:25.376+07:00  INFO 24768 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T18:38:26.037+07:00  WARN 24768 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T18:38:26.133+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T18:38:26.169+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T18:38:27.497+07:00  INFO 24768 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T18:38:27.544+07:00  WARN 24768 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T18:38:27.576+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T18:38:27.640+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T18:38:27.655+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T18:38:27.655+07:00  INFO 24768 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T18:38:27.655+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T18:38:27.655+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T18:38:27.655+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T18:38:27.655+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T18:38:27.655+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T18:38:27.655+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T18:38:27.655+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T18:38:27.702+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T18:38:27.703+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T18:38:27.705+07:00  INFO 24768 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T18:38:27.707+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720006707707 with initial instances count: 4
2024-07-03T18:38:27.718+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T18:38:27.718+07:00  INFO 24768 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720006707718, current=UP, previous=STARTING]
2024-07-03T18:38:27.718+07:00  INFO 24768 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T18:38:27.734+07:00  INFO 24768 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T18:38:27.734+07:00  INFO 24768 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T18:38:27.761+07:00  INFO 24768 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T18:38:27.771+07:00  INFO 24768 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 8.415 seconds (process running for 5156.691)
2024-07-03T18:38:27.772+07:00  INFO 24768 --- [individual-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation delta:


==========================
CONDITION EVALUATION DELTA
==========================


Positive matches:
-----------------

   RedisHealthContributorAutoConfiguration#redisHealthContributor matched:
      - @ConditionalOnMissingBean (names: redisHealthIndicator,redisHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)


Negative matches:
-----------------

   KafkaAutoConfiguration#kafkaProducerFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.ProducerFactory; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.ProducerFactory' producerFactory (OnBeanCondition)

   KafkaAutoConfiguration#kafkaTemplate:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.kafka.core.KafkaTemplate; SearchStrategy: all) found beans of type 'org.springframework.kafka.core.KafkaTemplate' kafkaTemplate (OnBeanCondition)

   LettuceConnectionConfiguration#redisConnectionFactory:
      Did not match:
         - @ConditionalOnMissingBean (types: org.springframework.data.redis.connection.RedisConnectionFactory; SearchStrategy: all) found beans of type 'org.springframework.data.redis.connection.RedisConnectionFactory' jedisConnectionFactory (OnBeanCondition)

   RedisAutoConfiguration#redisTemplate:
      Did not match:
         - @ConditionalOnMissingBean (names: redisTemplate; SearchStrategy: all) found beans named redisTemplate (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveRedisTemplate:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) did not find any beans of type org.springframework.data.redis.connection.ReactiveRedisConnectionFactory (OnBeanCondition)

   RedisReactiveAutoConfiguration#reactiveStringRedisTemplate:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) did not find any beans of type org.springframework.data.redis.connection.ReactiveRedisConnectionFactory (OnBeanCondition)

   RedisReactiveHealthContributorAutoConfiguration:
      Did not match:
         - @ConditionalOnBean (types: org.springframework.data.redis.connection.ReactiveRedisConnectionFactory; SearchStrategy: all) did not find any beans of type org.springframework.data.redis.connection.ReactiveRedisConnectionFactory (OnBeanCondition)
      Matched:
         - @ConditionalOnClass found required classes 'org.springframework.data.redis.connection.ReactiveRedisConnectionFactory', 'reactor.core.publisher.Flux' (OnClassCondition)
         - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)

   WebMvcAutoConfiguration.EnableWebMvcConfiguration#localeResolver:
      Did not match:
         - @ConditionalOnMissingBean (names: localeResolver; SearchStrategy: all) found beans named localeResolver (OnBeanCondition)


Exclusions:
-----------

    None


Unconditional classes:
----------------------

    None



2024-07-03T18:38:29.527+07:00  INFO 24768 --- [individual-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T18:38:29.528+07:00  INFO 24768 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720006709528, current=DOWN, previous=UP]
2024-07-03T18:38:29.529+07:00  INFO 24768 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T18:38:29.538+07:00  INFO 24768 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T18:38:29.560+07:00  INFO 24768 --- [individual-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T18:38:29.562+07:00  INFO 24768 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Shutdown initiated...
2024-07-03T18:38:29.565+07:00  INFO 24768 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-6 - Shutdown completed.
2024-07-03T18:38:29.567+07:00  INFO 24768 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T18:38:32.572+07:00  INFO 24768 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T18:38:32.589+07:00  INFO 24768 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T18:38:32.595+07:00  INFO 24768 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T18:38:37.074+07:00  INFO 29132 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 29132 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T18:38:37.080+07:00  INFO 29132 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T18:38:37.143+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T18:38:37.144+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T18:38:37.148+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\tuank\.gradle\caches\modules-2\files-2.1\org.apache.kafka\kafka-clients\3.7.0\b8f9f75bc3edc06f842dd16071465544198bc045\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/zstd-jni-1.5.5-6.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/lz4-java-1.8.0.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/snappy-java-1.1.10.5.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/slf4j-api-1.7.36.jar
2024-07-03T18:38:37.149+07:00  INFO 29132 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-03T18:38:37.149+07:00  INFO 29132 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-03T18:38:38.746+07:00  INFO 29132 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T18:38:38.749+07:00  INFO 29132 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T18:38:38.959+07:00  INFO 29132 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 199 ms. Found 10 JPA repository interfaces.
2024-07-03T18:38:38.975+07:00  INFO 29132 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T18:38:38.977+07:00  INFO 29132 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T18:38:38.997+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:38.998+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:38.998+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:38.998+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:38.998+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:38.999+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:38.999+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:38.999+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:38.999+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:38.999+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:38:38.999+07:00  INFO 29132 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2024-07-03T18:38:39.410+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=af9bf09b-d2a7-375a-b7fb-d5856cb9df81
2024-07-03T18:38:39.856+07:00  WARN 29132 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T18:38:39.861+07:00  WARN 29132 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T18:38:40.427+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T18:38:40.439+07:00  INFO 29132 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T18:38:40.439+07:00  INFO 29132 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T18:38:40.510+07:00  INFO 29132 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T18:38:40.511+07:00  INFO 29132 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3362 ms
2024-07-03T18:38:41.525+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T18:38:41.558+07:00  INFO 29132 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-03T18:38:41.714+07:00  INFO 29132 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@19bdccd6
2024-07-03T18:38:41.716+07:00  INFO 29132 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-03T18:38:43.534+07:00  INFO 29132 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T18:38:44.220+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-03T18:38:45.305+07:00  WARN 29132 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T18:38:45.432+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T18:38:45.508+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T18:38:47.446+07:00  INFO 29132 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T18:38:47.509+07:00  WARN 29132 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T18:38:47.535+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T18:38:47.668+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T18:38:47.709+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T18:38:47.712+07:00  INFO 29132 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T18:38:47.736+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T18:38:47.737+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T18:38:47.737+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T18:38:47.737+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T18:38:47.737+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T18:38:47.737+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T18:38:47.737+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T18:38:47.803+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T18:38:47.805+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T18:38:47.807+07:00  INFO 29132 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T18:38:47.812+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720006727812 with initial instances count: 5
2024-07-03T18:38:47.822+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T18:38:47.822+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720006727822, current=UP, previous=STARTING]
2024-07-03T18:38:47.823+07:00  INFO 29132 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T18:38:47.842+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T18:38:47.843+07:00  INFO 29132 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T18:38:47.860+07:00  INFO 29132 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 12.22 seconds (process running for 13.431)
2024-07-03T18:38:47.870+07:00  INFO 29132 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T18:38:48.468+07:00  INFO 29132 --- [individual-service] [RMI TCP Connection(3)-172.16.100.12] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-03T18:41:16.900+07:00  WARN 29132 --- [individual-service] [http-nio-9002-exec-4] PageModule$PlainPageSerializationWarning : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2024-07-03T18:42:41.750+07:00  INFO 29132 --- [individual-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 104 class path changes (0 additions, 104 deletions, 0 modifications)
2024-07-03T18:42:41.752+07:00  INFO 29132 --- [individual-service] [Thread-5] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T18:42:41.753+07:00  INFO 29132 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720006961753, current=DOWN, previous=UP]
2024-07-03T18:42:41.753+07:00  INFO 29132 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T18:42:41.765+07:00  INFO 29132 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T18:42:41.779+07:00  INFO 29132 --- [individual-service] [Thread-5] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T18:42:41.783+07:00  INFO 29132 --- [individual-service] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-03T18:42:41.789+07:00  INFO 29132 --- [individual-service] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-03T18:42:41.790+07:00  INFO 29132 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T18:42:44.805+07:00  INFO 29132 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T18:42:44.823+07:00  INFO 29132 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T18:42:44.827+07:00  INFO 29132 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T18:42:45.025+07:00  INFO 29132 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 29132 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T18:42:45.025+07:00  INFO 29132 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T18:42:45.027+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T18:42:45.027+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T18:42:45.544+07:00  INFO 29132 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T18:42:45.544+07:00  INFO 29132 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T18:42:45.578+07:00  INFO 29132 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 34 ms. Found 10 JPA repository interfaces.
2024-07-03T18:42:45.582+07:00  INFO 29132 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T18:42:45.582+07:00  INFO 29132 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T18:42:45.587+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:45.587+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:45.587+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:45.587+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:45.587+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:45.587+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:45.587+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:45.588+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:45.588+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:45.588+07:00  INFO 29132 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:45.588+07:00  INFO 29132 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-03T18:42:45.720+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=af9bf09b-d2a7-375a-b7fb-d5856cb9df81
2024-07-03T18:42:45.776+07:00  WARN 29132 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T18:42:45.778+07:00  WARN 29132 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T18:42:45.920+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T18:42:45.921+07:00  INFO 29132 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T18:42:45.922+07:00  INFO 29132 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T18:42:45.957+07:00  INFO 29132 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T18:42:45.957+07:00  INFO 29132 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 929 ms
2024-07-03T18:42:46.225+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T18:42:46.227+07:00  INFO 29132 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2024-07-03T18:42:46.260+07:00  INFO 29132 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@3789f954
2024-07-03T18:42:46.261+07:00  INFO 29132 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2024-07-03T18:42:46.696+07:00  INFO 29132 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T18:42:47.140+07:00  WARN 29132 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T18:42:47.218+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T18:42:47.253+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T18:42:48.224+07:00  INFO 29132 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T18:42:48.265+07:00  WARN 29132 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T18:42:48.282+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T18:42:48.335+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T18:42:48.339+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T18:42:48.340+07:00  INFO 29132 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T18:42:48.347+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T18:42:48.347+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T18:42:48.347+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T18:42:48.347+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T18:42:48.347+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T18:42:48.347+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T18:42:48.347+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T18:42:48.377+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T18:42:48.378+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T18:42:48.379+07:00  INFO 29132 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T18:42:48.380+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720006968380 with initial instances count: 5
2024-07-03T18:42:48.389+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T18:42:48.390+07:00  INFO 29132 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720006968390, current=UP, previous=STARTING]
2024-07-03T18:42:48.390+07:00  INFO 29132 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T18:42:48.392+07:00  INFO 29132 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T18:42:48.392+07:00  INFO 29132 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T18:42:48.400+07:00  INFO 29132 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T18:42:48.403+07:00  INFO 29132 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 3.482 seconds (process running for 253.974)
2024-07-03T18:42:48.404+07:00  INFO 29132 --- [individual-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T18:42:48.404+07:00  INFO 29132 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720006968404, current=DOWN, previous=UP]
2024-07-03T18:42:48.404+07:00  INFO 29132 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T18:42:48.406+07:00  INFO 29132 --- [individual-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-07-03T18:42:48.408+07:00  INFO 29132 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T18:42:48.415+07:00  INFO 29132 --- [individual-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T18:42:48.416+07:00  INFO 29132 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2024-07-03T18:42:48.418+07:00  INFO 29132 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.
2024-07-03T18:42:48.418+07:00  INFO 29132 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T18:42:51.424+07:00  INFO 29132 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T18:42:51.446+07:00  INFO 29132 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T18:42:51.453+07:00  INFO 29132 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T18:42:55.774+07:00  INFO 27324 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 27324 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T18:42:55.777+07:00  INFO 27324 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T18:42:55.856+07:00  INFO 27324 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T18:42:55.857+07:00  INFO 27324 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T18:42:55.865+07:00  INFO 27324 --- [individual-service] [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\tuank\.gradle\caches\modules-2\files-2.1\org.apache.kafka\kafka-clients\3.7.0\b8f9f75bc3edc06f842dd16071465544198bc045\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/zstd-jni-1.5.5-6.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/lz4-java-1.8.0.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/snappy-java-1.1.10.5.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/slf4j-api-1.7.36.jar
2024-07-03T18:42:55.865+07:00  INFO 27324 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-03T18:42:55.865+07:00  INFO 27324 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-03T18:42:57.461+07:00  INFO 27324 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T18:42:57.463+07:00  INFO 27324 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T18:42:57.694+07:00  INFO 27324 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 214 ms. Found 10 JPA repository interfaces.
2024-07-03T18:42:57.720+07:00  INFO 27324 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T18:42:57.723+07:00  INFO 27324 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T18:42:57.744+07:00  INFO 27324 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:57.744+07:00  INFO 27324 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:57.745+07:00  INFO 27324 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:57.745+07:00  INFO 27324 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:57.745+07:00  INFO 27324 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:57.745+07:00  INFO 27324 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:57.745+07:00  INFO 27324 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:57.746+07:00  INFO 27324 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:57.746+07:00  INFO 27324 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:57.746+07:00  INFO 27324 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:42:57.746+07:00  INFO 27324 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-07-03T18:42:58.255+07:00  INFO 27324 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=af9bf09b-d2a7-375a-b7fb-d5856cb9df81
2024-07-03T18:42:58.766+07:00  WARN 27324 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T18:42:58.778+07:00  WARN 27324 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T18:42:59.392+07:00  INFO 27324 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T18:42:59.408+07:00  INFO 27324 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T18:42:59.408+07:00  INFO 27324 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T18:42:59.474+07:00  INFO 27324 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T18:42:59.474+07:00  INFO 27324 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3607 ms
2024-07-03T18:43:00.524+07:00  INFO 27324 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T18:43:00.564+07:00  INFO 27324 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-03T18:43:00.788+07:00  INFO 27324 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2ecbbe85
2024-07-03T18:43:00.791+07:00  INFO 27324 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-03T18:43:02.997+07:00  INFO 27324 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T18:43:03.749+07:00  INFO 27324 --- [individual-service] [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-03T18:43:04.823+07:00  WARN 27324 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T18:43:04.960+07:00  INFO 27324 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T18:43:05.025+07:00  INFO 27324 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T18:43:07.131+07:00  INFO 27324 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T18:43:07.216+07:00  WARN 27324 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T18:43:07.242+07:00  INFO 27324 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T18:43:07.350+07:00  INFO 27324 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T18:43:07.389+07:00  INFO 27324 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T18:43:07.393+07:00  INFO 27324 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T18:43:07.415+07:00  INFO 27324 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T18:43:07.415+07:00  INFO 27324 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T18:43:07.416+07:00  INFO 27324 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T18:43:07.416+07:00  INFO 27324 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T18:43:07.416+07:00  INFO 27324 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T18:43:07.416+07:00  INFO 27324 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T18:43:07.416+07:00  INFO 27324 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T18:43:07.477+07:00  INFO 27324 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T18:43:07.479+07:00  INFO 27324 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T18:43:07.481+07:00  INFO 27324 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T18:43:07.486+07:00  INFO 27324 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720006987485 with initial instances count: 4
2024-07-03T18:43:07.496+07:00  INFO 27324 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T18:43:07.496+07:00  INFO 27324 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720006987496, current=UP, previous=STARTING]
2024-07-03T18:43:07.498+07:00  INFO 27324 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T18:43:07.513+07:00  INFO 27324 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T18:43:07.514+07:00  INFO 27324 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T18:43:07.536+07:00  INFO 27324 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 13.257 seconds (process running for 14.327)
2024-07-03T18:43:07.538+07:00  INFO 27324 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T18:43:07.836+07:00  INFO 27324 --- [individual-service] [RMI TCP Connection(2)-172.16.100.12] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-03T18:44:10.706+07:00 ERROR 27324 --- [individual-service] [http-nio-9002-exec-1] c.k.i.u.e.GlobalExceptionHandler         : Has ERROR

feign.RetryableException: f41f4ce90672 executing POST http://file-service/v1/convert/file-to-json
	at feign.FeignException.errorExecuting(FeignException.java:278) ~[feign-core-13.2.1.jar:na]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:110) ~[feign-core-13.2.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:70) ~[feign-core-13.2.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:99) ~[feign-core-13.2.1.jar:na]
	at jdk.proxy3/jdk.proxy3.$Proxy206.convertFileToJson(Unknown Source) ~[na:na]
	at com.kltn.individualservice.service.impl.TeacherServiceImpl.importTeachers(TeacherServiceImpl.java:52) ~[main/:na]
	at com.kltn.individualservice.controller.TeacherController.importTeachers(TeacherController.java:26) ~[main/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.24.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.24.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.8.jar:6.1.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.8.jar:6.1.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.8.jar:6.1.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.8.jar:6.1.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: java.net.UnknownHostException: f41f4ce90672
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:751) ~[na:na]
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:178) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:531) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:636) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:280) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:386) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:408) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1304) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1237) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1123) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1052) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1446) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1417) ~[na:na]
	at feign.Client$Default.convertAndSend(Client.java:224) ~[feign-core-13.2.1.jar:na]
	at feign.Client$Default.execute(Client.java:106) ~[feign-core-13.2.1.jar:na]
	at org.springframework.cloud.openfeign.loadbalancer.LoadBalancerUtils.executeWithLoadBalancerLifecycleProcessing(LoadBalancerUtils.java:56) ~[spring-cloud-openfeign-core-4.1.2.jar:4.1.2]
	at org.springframework.cloud.openfeign.loadbalancer.RetryableFeignBlockingLoadBalancerClient.lambda$execute$2(RetryableFeignBlockingLoadBalancerClient.java:189) ~[spring-cloud-openfeign-core-4.1.2.jar:4.1.2]
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:344) ~[spring-retry-2.0.6.jar:na]
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:233) ~[spring-retry-2.0.6.jar:na]
	at org.springframework.cloud.openfeign.loadbalancer.RetryableFeignBlockingLoadBalancerClient.execute(RetryableFeignBlockingLoadBalancerClient.java:136) ~[spring-cloud-openfeign-core-4.1.2.jar:4.1.2]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:100) ~[feign-core-13.2.1.jar:na]
	... 57 common frames omitted

2024-07-03T18:45:29.539+07:00  WARN 27324 --- [individual-service] [http-nio-9002-exec-5] o.s.c.l.core.RoundRobinLoadBalancer      : No servers available for service: file-service
2024-07-03T18:45:29.540+07:00  WARN 27324 --- [individual-service] [http-nio-9002-exec-5] RetryableFeignBlockingLoadBalancerClient : Service instance was not resolved, executing the original request
2024-07-03T18:45:32.244+07:00 ERROR 27324 --- [individual-service] [http-nio-9002-exec-5] c.k.i.u.e.GlobalExceptionHandler         : Has ERROR

feign.RetryableException: file-service executing POST http://file-service/v1/convert/file-to-json
	at feign.FeignException.errorExecuting(FeignException.java:278) ~[feign-core-13.2.1.jar:na]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:110) ~[feign-core-13.2.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:70) ~[feign-core-13.2.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:99) ~[feign-core-13.2.1.jar:na]
	at jdk.proxy3/jdk.proxy3.$Proxy206.convertFileToJson(Unknown Source) ~[na:na]
	at com.kltn.individualservice.service.impl.TeacherServiceImpl.importTeachers(TeacherServiceImpl.java:52) ~[main/:na]
	at com.kltn.individualservice.controller.TeacherController.importTeachers(TeacherController.java:26) ~[main/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.24.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.24.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.8.jar:6.1.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.8.jar:6.1.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.8.jar:6.1.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.8.jar:6.1.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: java.net.UnknownHostException: file-service
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:567) ~[na:na]
	at java.base/java.net.Socket.connect(Socket.java:751) ~[na:na]
	at java.base/sun.net.NetworkClient.doConnect(NetworkClient.java:178) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:531) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.openServer(HttpClient.java:636) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.<init>(HttpClient.java:280) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:386) ~[na:na]
	at java.base/sun.net.www.http.HttpClient.New(HttpClient.java:408) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:1304) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect0(HttpURLConnection.java:1237) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:1123) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:1052) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getOutputStream0(HttpURLConnection.java:1446) ~[na:na]
	at java.base/sun.net.www.protocol.http.HttpURLConnection.getOutputStream(HttpURLConnection.java:1417) ~[na:na]
	at feign.Client$Default.convertAndSend(Client.java:224) ~[feign-core-13.2.1.jar:na]
	at feign.Client$Default.execute(Client.java:106) ~[feign-core-13.2.1.jar:na]
	at org.springframework.cloud.openfeign.loadbalancer.LoadBalancerUtils.executeWithLoadBalancerLifecycleProcessing(LoadBalancerUtils.java:56) ~[spring-cloud-openfeign-core-4.1.2.jar:4.1.2]
	at org.springframework.cloud.openfeign.loadbalancer.RetryableFeignBlockingLoadBalancerClient.lambda$execute$2(RetryableFeignBlockingLoadBalancerClient.java:189) ~[spring-cloud-openfeign-core-4.1.2.jar:4.1.2]
	at org.springframework.retry.support.RetryTemplate.doExecute(RetryTemplate.java:344) ~[spring-retry-2.0.6.jar:na]
	at org.springframework.retry.support.RetryTemplate.execute(RetryTemplate.java:233) ~[spring-retry-2.0.6.jar:na]
	at org.springframework.cloud.openfeign.loadbalancer.RetryableFeignBlockingLoadBalancerClient.execute(RetryableFeignBlockingLoadBalancerClient.java:136) ~[spring-cloud-openfeign-core-4.1.2.jar:4.1.2]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:100) ~[feign-core-13.2.1.jar:na]
	... 57 common frames omitted

2024-07-03T18:46:03.625+07:00 ERROR 27324 --- [individual-service] [http-nio-9002-exec-3] c.k.i.u.e.GlobalExceptionHandler         : Has ERROR CustomException with message = Vai trò không tồn tại, at = com.kltn.individualservice.service.impl.RoleServiceImpl.lambda$getRoleByCode$0(RoleServiceImpl.java:25)
2024-07-03T18:48:07.433+07:00  INFO 27324 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T18:51:57.219+07:00  INFO 27324 --- [individual-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T18:51:57.220+07:00  INFO 27324 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720007517220, current=DOWN, previous=UP]
2024-07-03T18:51:57.220+07:00  INFO 27324 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T18:51:57.227+07:00  INFO 27324 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T18:51:57.265+07:00  INFO 27324 --- [individual-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T18:51:57.272+07:00  INFO 27324 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-03T18:51:57.281+07:00  INFO 27324 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-03T18:51:57.281+07:00  INFO 27324 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T18:52:00.296+07:00  INFO 27324 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T18:52:00.317+07:00  INFO 27324 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T18:52:00.325+07:00  INFO 27324 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T18:52:07.401+07:00  INFO 20812 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 20812 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T18:52:07.403+07:00  INFO 20812 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T18:52:07.464+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T18:52:07.464+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T18:52:07.467+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\tuank\.gradle\caches\modules-2\files-2.1\org.apache.kafka\kafka-clients\3.7.0\b8f9f75bc3edc06f842dd16071465544198bc045\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/zstd-jni-1.5.5-6.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/lz4-java-1.8.0.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/snappy-java-1.1.10.5.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/slf4j-api-1.7.36.jar
2024-07-03T18:52:07.468+07:00  INFO 20812 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-03T18:52:07.468+07:00  INFO 20812 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-03T18:52:08.964+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T18:52:08.966+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T18:52:09.168+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 190 ms. Found 10 JPA repository interfaces.
2024-07-03T18:52:09.184+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T18:52:09.186+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T18:52:09.202+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:52:09.202+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:52:09.202+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:52:09.202+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:52:09.203+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:52:09.203+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:52:09.203+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:52:09.203+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:52:09.203+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:52:09.203+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:52:09.204+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-03T18:52:09.596+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=af9bf09b-d2a7-375a-b7fb-d5856cb9df81
2024-07-03T18:52:10.069+07:00  WARN 20812 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T18:52:10.075+07:00  WARN 20812 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T18:52:10.559+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T18:52:10.571+07:00  INFO 20812 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T18:52:10.571+07:00  INFO 20812 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T18:52:10.639+07:00  INFO 20812 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T18:52:10.640+07:00  INFO 20812 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3171 ms
2024-07-03T18:52:11.570+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T18:52:11.605+07:00  INFO 20812 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-03T18:52:11.749+07:00  INFO 20812 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@d7b9773
2024-07-03T18:52:11.751+07:00  INFO 20812 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-03T18:52:13.619+07:00  INFO 20812 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T18:52:14.297+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-03T18:52:15.771+07:00  WARN 20812 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T18:52:15.885+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T18:52:15.941+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T18:52:17.782+07:00  INFO 20812 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T18:52:17.840+07:00  WARN 20812 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T18:52:17.865+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T18:52:17.969+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T18:52:18.008+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T18:52:18.011+07:00  INFO 20812 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T18:52:18.035+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T18:52:18.035+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T18:52:18.035+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T18:52:18.035+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T18:52:18.035+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T18:52:18.035+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T18:52:18.035+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T18:52:18.093+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T18:52:18.096+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T18:52:18.098+07:00  INFO 20812 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T18:52:18.102+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720007538102 with initial instances count: 5
2024-07-03T18:52:18.111+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T18:52:18.112+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720007538112, current=UP, previous=STARTING]
2024-07-03T18:52:18.114+07:00  INFO 20812 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T18:52:18.132+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T18:52:18.133+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T18:52:18.149+07:00  INFO 20812 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 12.13 seconds (process running for 13.232)
2024-07-03T18:52:18.157+07:00  INFO 20812 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T18:52:18.459+07:00  INFO 20812 --- [individual-service] [RMI TCP Connection(2)-172.16.100.12] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-03T18:53:41.689+07:00 ERROR 20812 --- [individual-service] [http-nio-9002-exec-1] c.k.i.u.e.GlobalExceptionHandler         : Has ERROR

java.lang.NullPointerException: Cannot invoke "java.lang.Integer.intValue()" because the return value of "com.kltn.individualservice.service.UserService.findMaxNumberInCode(com.kltn.individualservice.constant.UserType)" is null
	at com.kltn.individualservice.service.impl.TeacherServiceImpl.importTeachers(TeacherServiceImpl.java:56) ~[main/:na]
	at com.kltn.individualservice.controller.TeacherController.importTeachers(TeacherController.java:26) ~[main/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590) ~[tomcat-embed-core-10.1.24.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.24.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.8.jar:6.1.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.8.jar:6.1.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.8.jar:6.1.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.8.jar:6.1.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2024-07-03T18:57:18.046+07:00  INFO 20812 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T18:57:58.039+07:00  INFO 20812 --- [individual-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 104 class path changes (0 additions, 104 deletions, 0 modifications)
2024-07-03T18:57:58.042+07:00  INFO 20812 --- [individual-service] [Thread-5] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T18:57:58.043+07:00  INFO 20812 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720007878043, current=DOWN, previous=UP]
2024-07-03T18:57:58.043+07:00  INFO 20812 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T18:57:58.053+07:00  INFO 20812 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T18:57:58.075+07:00  INFO 20812 --- [individual-service] [Thread-5] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T18:57:58.078+07:00  INFO 20812 --- [individual-service] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-03T18:57:58.086+07:00  INFO 20812 --- [individual-service] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-03T18:57:58.087+07:00  INFO 20812 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T18:58:01.096+07:00  INFO 20812 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T18:58:01.114+07:00  INFO 20812 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T18:58:01.118+07:00  INFO 20812 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T18:58:01.325+07:00  INFO 20812 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 20812 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T18:58:01.325+07:00  INFO 20812 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T18:58:01.327+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T18:58:01.327+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T18:58:01.821+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T18:58:01.822+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T18:58:01.856+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 34 ms. Found 10 JPA repository interfaces.
2024-07-03T18:58:01.864+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T18:58:01.864+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T18:58:01.869+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:58:01.869+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:58:01.869+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:58:01.869+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:58:01.869+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:58:01.869+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:58:01.869+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:58:01.870+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:58:01.870+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:58:01.870+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T18:58:01.870+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-03T18:58:02.004+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=af9bf09b-d2a7-375a-b7fb-d5856cb9df81
2024-07-03T18:58:02.066+07:00  WARN 20812 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T18:58:02.068+07:00  WARN 20812 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T18:58:02.224+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T18:58:02.224+07:00  INFO 20812 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T18:58:02.225+07:00  INFO 20812 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T18:58:02.296+07:00  INFO 20812 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T18:58:02.296+07:00  INFO 20812 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 969 ms
2024-07-03T18:58:02.532+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T18:58:02.534+07:00  INFO 20812 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2024-07-03T18:58:02.565+07:00  INFO 20812 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@13a29bb
2024-07-03T18:58:02.565+07:00  INFO 20812 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2024-07-03T18:58:03.237+07:00  INFO 20812 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T18:58:03.828+07:00  WARN 20812 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T18:58:03.920+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T18:58:03.957+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T18:58:04.975+07:00  INFO 20812 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T18:58:05.018+07:00  WARN 20812 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T18:58:05.035+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T18:58:05.093+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T18:58:05.097+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T18:58:05.097+07:00  INFO 20812 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T18:58:05.104+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T18:58:05.104+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T18:58:05.104+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T18:58:05.104+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T18:58:05.104+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T18:58:05.104+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T18:58:05.104+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T18:58:05.186+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T18:58:05.189+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T18:58:05.190+07:00  INFO 20812 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T18:58:05.191+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720007885191 with initial instances count: 5
2024-07-03T18:58:05.200+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T18:58:05.201+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720007885201, current=UP, previous=STARTING]
2024-07-03T18:58:05.201+07:00  INFO 20812 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T18:58:05.203+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T18:58:05.204+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T18:58:05.212+07:00  INFO 20812 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T18:58:05.220+07:00  INFO 20812 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 3.998 seconds (process running for 360.303)
2024-07-03T18:58:05.223+07:00  INFO 20812 --- [individual-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-07-03T18:58:06.424+07:00  INFO 20812 --- [individual-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 104 class path changes (104 additions, 0 deletions, 0 modifications)
2024-07-03T18:58:06.425+07:00  INFO 20812 --- [individual-service] [Thread-9] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T18:58:06.425+07:00  INFO 20812 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720007886425, current=DOWN, previous=UP]
2024-07-03T18:58:06.425+07:00  INFO 20812 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T18:58:06.471+07:00  INFO 20812 --- [individual-service] [Thread-9] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T18:58:06.472+07:00  INFO 20812 --- [individual-service] [Thread-9] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2024-07-03T18:58:06.477+07:00  INFO 20812 --- [individual-service] [Thread-9] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.
2024-07-03T18:58:06.477+07:00  INFO 20812 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T19:26:21.535+07:00  INFO 20812 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T19:26:21.537+07:00  INFO 20812 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T19:26:21.635+07:00  INFO 20812 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T19:26:21.642+07:00  INFO 20812 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T19:26:21.954+07:00  INFO 20812 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 20812 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T19:26:21.955+07:00  INFO 20812 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T19:26:21.961+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T19:26:21.961+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T19:26:22.605+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T19:26:22.605+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T19:26:22.644+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 39 ms. Found 10 JPA repository interfaces.
2024-07-03T19:26:22.647+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T19:26:22.647+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T19:26:22.652+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:26:22.652+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:26:22.652+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:26:22.652+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:26:22.652+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:26:22.652+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:26:22.652+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:26:22.652+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:26:22.652+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:26:22.653+07:00  INFO 20812 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:26:22.653+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-07-03T19:26:22.804+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=af9bf09b-d2a7-375a-b7fb-d5856cb9df81
2024-07-03T19:26:22.878+07:00  WARN 20812 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T19:26:22.882+07:00  WARN 20812 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T19:26:23.067+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T19:26:23.068+07:00  INFO 20812 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T19:26:23.068+07:00  INFO 20812 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T19:26:23.115+07:00  INFO 20812 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T19:26:23.115+07:00  INFO 20812 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1153 ms
2024-07-03T19:26:23.357+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T19:26:23.358+07:00  INFO 20812 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Starting...
2024-07-03T19:26:23.383+07:00  INFO 20812 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-3 - Added connection org.postgresql.jdbc.PgConnection@38a60a03
2024-07-03T19:26:23.383+07:00  INFO 20812 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Start completed.
2024-07-03T19:26:23.772+07:00  INFO 20812 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T19:26:24.246+07:00  WARN 20812 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T19:26:24.382+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T19:26:24.435+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T19:26:25.684+07:00  INFO 20812 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T19:26:25.734+07:00  WARN 20812 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T19:26:25.752+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T19:26:25.810+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T19:26:25.815+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T19:26:25.815+07:00  INFO 20812 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T19:26:25.817+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T19:26:25.817+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T19:26:25.817+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T19:26:25.817+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T19:26:25.817+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T19:26:25.818+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T19:26:25.818+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T19:26:25.849+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T19:26:25.849+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T19:26:25.851+07:00  INFO 20812 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T19:26:25.852+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720009585852 with initial instances count: 5
2024-07-03T19:26:25.861+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T19:26:25.861+07:00  INFO 20812 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720009585861, current=UP, previous=STARTING]
2024-07-03T19:26:25.861+07:00  INFO 20812 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T19:26:25.864+07:00  INFO 20812 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T19:26:25.864+07:00  INFO 20812 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T19:26:25.874+07:00  INFO 20812 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T19:26:25.877+07:00  INFO 20812 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 4.109 seconds (process running for 2060.977)
2024-07-03T19:26:25.880+07:00  INFO 20812 --- [individual-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-07-03T19:31:13.754+07:00  INFO 20812 --- [individual-service] [http-nio-9002-exec-3] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-03T19:31:16.255+07:00  WARN 20812 --- [individual-service] [http-nio-9002-exec-2] PageModule$PlainPageSerializationWarning : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2024-07-03T19:31:25.825+07:00  INFO 20812 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T19:34:17.189+07:00  WARN 20812 --- [individual-service] [HikariPool-3 housekeeper] com.zaxxer.hikari.pool.HikariPool        : HikariPool-3 - Thread starvation or clock leap detected (housekeeper delta=53s591ms848µs600ns).
2024-07-03T19:34:17.289+07:00  INFO 20812 --- [individual-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T19:34:17.290+07:00  INFO 20812 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720010057290, current=DOWN, previous=UP]
2024-07-03T19:34:17.290+07:00  INFO 20812 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T19:34:17.302+07:00  INFO 20812 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T19:34:17.315+07:00  INFO 20812 --- [individual-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T19:34:17.316+07:00  INFO 20812 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown initiated...
2024-07-03T19:34:17.319+07:00  INFO 20812 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown completed.
2024-07-03T19:34:17.320+07:00  INFO 20812 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T19:34:20.330+07:00  INFO 20812 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T19:34:20.351+07:00  INFO 20812 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T19:34:20.357+07:00  INFO 20812 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T19:34:28.013+07:00  INFO 10604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 10604 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T19:34:28.016+07:00  INFO 10604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T19:34:28.068+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T19:34:28.068+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T19:34:28.071+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\tuank\.gradle\caches\modules-2\files-2.1\org.apache.kafka\kafka-clients\3.7.0\b8f9f75bc3edc06f842dd16071465544198bc045\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/zstd-jni-1.5.5-6.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/lz4-java-1.8.0.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/snappy-java-1.1.10.5.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/slf4j-api-1.7.36.jar
2024-07-03T19:34:28.071+07:00  INFO 10604 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-03T19:34:28.071+07:00  INFO 10604 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-03T19:34:29.381+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T19:34:29.383+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T19:34:29.562+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 172 ms. Found 10 JPA repository interfaces.
2024-07-03T19:34:29.578+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T19:34:29.580+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T19:34:29.596+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:34:29.596+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:34:29.596+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:34:29.597+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:34:29.597+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:34:29.597+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:34:29.597+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:34:29.597+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:34:29.597+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:34:29.598+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:34:29.598+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-03T19:34:30.020+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=af9bf09b-d2a7-375a-b7fb-d5856cb9df81
2024-07-03T19:34:30.478+07:00  WARN 10604 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T19:34:30.482+07:00  WARN 10604 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T19:34:31.021+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T19:34:31.036+07:00  INFO 10604 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T19:34:31.037+07:00  INFO 10604 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T19:34:31.103+07:00  INFO 10604 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T19:34:31.104+07:00  INFO 10604 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3031 ms
2024-07-03T19:34:32.135+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T19:34:32.167+07:00  INFO 10604 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-03T19:34:32.316+07:00  INFO 10604 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@f4e5eac
2024-07-03T19:34:32.318+07:00  INFO 10604 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-03T19:34:34.288+07:00  INFO 10604 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T19:34:34.949+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-03T19:34:36.018+07:00  WARN 10604 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T19:34:36.157+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T19:34:36.228+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T19:34:38.095+07:00  INFO 10604 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T19:34:38.154+07:00  WARN 10604 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T19:34:38.180+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T19:34:38.305+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T19:34:38.349+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T19:34:38.352+07:00  INFO 10604 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T19:34:38.375+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T19:34:38.376+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T19:34:38.376+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T19:34:38.376+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T19:34:38.376+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T19:34:38.376+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T19:34:38.376+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T19:34:38.524+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T19:34:38.526+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T19:34:38.528+07:00  INFO 10604 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T19:34:38.537+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720010078536 with initial instances count: 5
2024-07-03T19:34:38.546+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T19:34:38.546+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720010078546, current=UP, previous=STARTING]
2024-07-03T19:34:38.548+07:00  INFO 10604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T19:34:38.568+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T19:34:38.570+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T19:34:38.593+07:00  INFO 10604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 11.876 seconds (process running for 12.97)
2024-07-03T19:34:38.604+07:00  INFO 10604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T19:34:39.202+07:00  INFO 10604 --- [individual-service] [RMI TCP Connection(2)-172.16.100.12] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-03T19:37:51.752+07:00  INFO 10604 --- [individual-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 104 class path changes (0 additions, 104 deletions, 0 modifications)
2024-07-03T19:37:51.754+07:00  INFO 10604 --- [individual-service] [Thread-5] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T19:37:51.754+07:00  INFO 10604 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720010271754, current=DOWN, previous=UP]
2024-07-03T19:37:51.755+07:00  INFO 10604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T19:37:51.767+07:00  INFO 10604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T19:37:51.781+07:00  INFO 10604 --- [individual-service] [Thread-5] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T19:37:51.785+07:00  INFO 10604 --- [individual-service] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-03T19:37:51.791+07:00  INFO 10604 --- [individual-service] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-03T19:37:51.791+07:00  INFO 10604 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T19:37:54.806+07:00  INFO 10604 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T19:37:54.823+07:00  INFO 10604 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T19:37:54.827+07:00  INFO 10604 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T19:37:55.044+07:00  INFO 10604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 10604 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T19:37:55.044+07:00  INFO 10604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T19:37:55.044+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T19:37:55.044+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T19:37:55.526+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T19:37:55.526+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T19:37:55.564+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 34 ms. Found 10 JPA repository interfaces.
2024-07-03T19:37:55.564+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T19:37:55.564+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T19:37:55.575+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:37:55.575+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:37:55.575+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:37:55.575+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:37:55.575+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:37:55.575+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:37:55.575+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:37:55.575+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:37:55.575+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:37:55.575+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:37:55.575+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6 ms. Found 0 Redis repository interfaces.
2024-07-03T19:37:55.686+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=af9bf09b-d2a7-375a-b7fb-d5856cb9df81
2024-07-03T19:37:55.748+07:00  WARN 10604 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T19:37:55.748+07:00  WARN 10604 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T19:37:55.900+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T19:37:55.900+07:00  INFO 10604 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T19:37:55.900+07:00  INFO 10604 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T19:37:55.933+07:00  INFO 10604 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T19:37:55.933+07:00  INFO 10604 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 889 ms
2024-07-03T19:37:56.175+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T19:37:56.176+07:00  INFO 10604 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2024-07-03T19:37:56.201+07:00  INFO 10604 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@12f30795
2024-07-03T19:37:56.201+07:00  INFO 10604 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2024-07-03T19:37:56.708+07:00  INFO 10604 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T19:37:57.193+07:00  WARN 10604 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T19:37:57.284+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T19:37:57.314+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T19:37:58.384+07:00  INFO 10604 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T19:37:58.423+07:00  WARN 10604 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T19:37:58.435+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T19:37:58.494+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T19:37:58.499+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T19:37:58.503+07:00  INFO 10604 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T19:37:58.503+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T19:37:58.503+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T19:37:58.503+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T19:37:58.503+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T19:37:58.503+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T19:37:58.503+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T19:37:58.503+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T19:37:58.545+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T19:37:58.547+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T19:37:58.548+07:00  INFO 10604 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T19:37:58.551+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720010278551 with initial instances count: 5
2024-07-03T19:37:58.554+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T19:37:58.554+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720010278554, current=UP, previous=STARTING]
2024-07-03T19:37:58.554+07:00  INFO 10604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T19:37:58.562+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T19:37:58.562+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T19:37:58.571+07:00  INFO 10604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T19:37:58.574+07:00  INFO 10604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 3.633 seconds (process running for 212.95)
2024-07-03T19:37:58.576+07:00  INFO 10604 --- [individual-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-07-03T19:37:59.816+07:00  INFO 10604 --- [individual-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 105 class path changes (105 additions, 0 deletions, 0 modifications)
2024-07-03T19:37:59.816+07:00  INFO 10604 --- [individual-service] [Thread-9] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T19:37:59.816+07:00  INFO 10604 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720010279816, current=DOWN, previous=UP]
2024-07-03T19:37:59.816+07:00  INFO 10604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T19:37:59.824+07:00  INFO 10604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T19:37:59.835+07:00  INFO 10604 --- [individual-service] [Thread-9] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T19:37:59.835+07:00  INFO 10604 --- [individual-service] [Thread-9] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2024-07-03T19:37:59.839+07:00  INFO 10604 --- [individual-service] [Thread-9] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.
2024-07-03T19:37:59.841+07:00  INFO 10604 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T19:38:02.845+07:00  INFO 10604 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T19:38:02.865+07:00  INFO 10604 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T19:38:02.867+07:00  INFO 10604 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T19:38:03.058+07:00  INFO 10604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 10604 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T19:38:03.059+07:00  INFO 10604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T19:38:03.061+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T19:38:03.062+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T19:38:03.522+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T19:38:03.522+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T19:38:03.558+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 35 ms. Found 10 JPA repository interfaces.
2024-07-03T19:38:03.561+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T19:38:03.561+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T19:38:03.565+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:38:03.565+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:38:03.565+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:38:03.565+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:38:03.566+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:38:03.566+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:38:03.566+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:38:03.566+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:38:03.566+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:38:03.566+07:00  INFO 10604 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:38:03.566+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5 ms. Found 0 Redis repository interfaces.
2024-07-03T19:38:03.698+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=af9bf09b-d2a7-375a-b7fb-d5856cb9df81
2024-07-03T19:38:03.751+07:00  WARN 10604 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T19:38:03.753+07:00  WARN 10604 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T19:38:03.929+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T19:38:03.929+07:00  INFO 10604 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T19:38:03.929+07:00  INFO 10604 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T19:38:03.964+07:00  INFO 10604 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T19:38:03.964+07:00  INFO 10604 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 902 ms
2024-07-03T19:38:04.192+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T19:38:04.192+07:00  INFO 10604 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Starting...
2024-07-03T19:38:04.222+07:00  INFO 10604 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-3 - Added connection org.postgresql.jdbc.PgConnection@fcf237a
2024-07-03T19:38:04.222+07:00  INFO 10604 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Start completed.
2024-07-03T19:38:04.652+07:00  INFO 10604 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T19:38:05.110+07:00  WARN 10604 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T19:38:05.186+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T19:38:05.218+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T19:38:06.199+07:00  INFO 10604 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T19:38:06.239+07:00  WARN 10604 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T19:38:06.255+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T19:38:06.311+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T19:38:06.315+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T19:38:06.315+07:00  INFO 10604 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T19:38:06.316+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T19:38:06.316+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T19:38:06.316+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T19:38:06.316+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T19:38:06.316+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T19:38:06.316+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T19:38:06.316+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T19:38:06.356+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T19:38:06.358+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T19:38:06.362+07:00  INFO 10604 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T19:38:06.363+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720010286363 with initial instances count: 5
2024-07-03T19:38:06.372+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T19:38:06.373+07:00  INFO 10604 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720010286373, current=UP, previous=STARTING]
2024-07-03T19:38:06.373+07:00  INFO 10604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T19:38:06.383+07:00  INFO 10604 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T19:38:06.383+07:00  INFO 10604 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T19:38:06.394+07:00  INFO 10604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T19:38:06.398+07:00  INFO 10604 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 3.423 seconds (process running for 220.773)
2024-07-03T19:38:06.400+07:00  INFO 10604 --- [individual-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-07-03T19:43:06.333+07:00  INFO 10604 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T19:44:11.668+07:00  INFO 10604 --- [individual-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T19:44:11.669+07:00  INFO 10604 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720010651669, current=DOWN, previous=UP]
2024-07-03T19:44:11.670+07:00  INFO 10604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T19:44:11.689+07:00  INFO 10604 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T19:44:11.690+07:00  INFO 10604 --- [individual-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T19:44:11.691+07:00  INFO 10604 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown initiated...
2024-07-03T19:44:11.695+07:00  INFO 10604 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-3 - Shutdown completed.
2024-07-03T19:44:11.696+07:00  INFO 10604 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T19:44:14.710+07:00  INFO 10604 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T19:44:14.732+07:00  INFO 10604 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T19:44:14.738+07:00  INFO 10604 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T19:44:21.805+07:00  INFO 7884 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 7884 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T19:44:21.808+07:00  INFO 7884 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T19:44:21.862+07:00  INFO 7884 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T19:44:21.862+07:00  INFO 7884 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T19:44:21.865+07:00  INFO 7884 --- [individual-service] [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\tuank\.gradle\caches\modules-2\files-2.1\org.apache.kafka\kafka-clients\3.7.0\b8f9f75bc3edc06f842dd16071465544198bc045\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/zstd-jni-1.5.5-6.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/lz4-java-1.8.0.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/snappy-java-1.1.10.5.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/slf4j-api-1.7.36.jar
2024-07-03T19:44:21.866+07:00  INFO 7884 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-03T19:44:21.866+07:00  INFO 7884 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-03T19:44:23.504+07:00  INFO 7884 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T19:44:23.507+07:00  INFO 7884 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T19:44:23.740+07:00  INFO 7884 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 223 ms. Found 10 JPA repository interfaces.
2024-07-03T19:44:23.759+07:00  INFO 7884 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T19:44:23.760+07:00  INFO 7884 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T19:44:23.779+07:00  INFO 7884 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:44:23.779+07:00  INFO 7884 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:44:23.779+07:00  INFO 7884 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:44:23.780+07:00  INFO 7884 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:44:23.780+07:00  INFO 7884 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:44:23.780+07:00  INFO 7884 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:44:23.780+07:00  INFO 7884 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:44:23.781+07:00  INFO 7884 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:44:23.781+07:00  INFO 7884 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:44:23.781+07:00  INFO 7884 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:44:23.781+07:00  INFO 7884 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-07-03T19:44:24.266+07:00  INFO 7884 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=af9bf09b-d2a7-375a-b7fb-d5856cb9df81
2024-07-03T19:44:24.690+07:00  WARN 7884 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T19:44:24.695+07:00  WARN 7884 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T19:44:25.217+07:00  INFO 7884 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T19:44:25.231+07:00  INFO 7884 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T19:44:25.232+07:00  INFO 7884 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T19:44:25.317+07:00  INFO 7884 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T19:44:25.317+07:00  INFO 7884 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3451 ms
2024-07-03T19:44:26.379+07:00  INFO 7884 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T19:44:26.411+07:00  INFO 7884 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-03T19:44:26.563+07:00  INFO 7884 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@46a7f316
2024-07-03T19:44:26.565+07:00  INFO 7884 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-03T19:44:28.618+07:00  INFO 7884 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T19:44:29.405+07:00  INFO 7884 --- [individual-service] [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-03T19:44:30.528+07:00  WARN 7884 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T19:44:30.669+07:00  INFO 7884 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T19:44:30.742+07:00  INFO 7884 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T19:44:32.670+07:00  INFO 7884 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T19:44:32.735+07:00  WARN 7884 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T19:44:32.761+07:00  INFO 7884 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T19:44:32.900+07:00  INFO 7884 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T19:44:32.939+07:00  INFO 7884 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T19:44:32.942+07:00  INFO 7884 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T19:44:32.964+07:00  INFO 7884 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T19:44:32.964+07:00  INFO 7884 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T19:44:32.965+07:00  INFO 7884 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T19:44:32.965+07:00  INFO 7884 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T19:44:32.965+07:00  INFO 7884 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T19:44:32.965+07:00  INFO 7884 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T19:44:32.965+07:00  INFO 7884 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T19:44:33.039+07:00  INFO 7884 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T19:44:33.042+07:00  INFO 7884 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T19:44:33.044+07:00  INFO 7884 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T19:44:33.048+07:00  INFO 7884 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720010673048 with initial instances count: 4
2024-07-03T19:44:33.057+07:00  INFO 7884 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T19:44:33.062+07:00  INFO 7884 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720010673062, current=UP, previous=STARTING]
2024-07-03T19:44:33.065+07:00  INFO 7884 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T19:44:33.086+07:00  INFO 7884 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T19:44:33.087+07:00  INFO 7884 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T19:44:33.106+07:00  INFO 7884 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 12.97 seconds (process running for 14.104)
2024-07-03T19:44:33.118+07:00  INFO 7884 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T19:44:33.548+07:00  INFO 7884 --- [individual-service] [RMI TCP Connection(7)-172.16.100.12] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-03T19:46:12.060+07:00  WARN 7884 --- [individual-service] [http-nio-9002-exec-3] PageModule$PlainPageSerializationWarning : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2024-07-03T19:46:40.062+07:00  INFO 7884 --- [individual-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T19:46:40.063+07:00  INFO 7884 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720010800063, current=DOWN, previous=UP]
2024-07-03T19:46:40.064+07:00  INFO 7884 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T19:46:40.083+07:00  INFO 7884 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T19:46:40.095+07:00  INFO 7884 --- [individual-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T19:46:40.099+07:00  INFO 7884 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-03T19:46:40.104+07:00  INFO 7884 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-03T19:46:40.106+07:00  INFO 7884 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T19:46:43.109+07:00  INFO 7884 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T19:46:43.129+07:00  INFO 7884 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T19:46:43.138+07:00  INFO 7884 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T19:46:50.370+07:00  INFO 13808 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 13808 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T19:46:50.382+07:00  INFO 13808 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T19:46:50.447+07:00  INFO 13808 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T19:46:50.447+07:00  INFO 13808 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T19:46:50.451+07:00  INFO 13808 --- [individual-service] [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\tuank\.gradle\caches\modules-2\files-2.1\org.apache.kafka\kafka-clients\3.7.0\b8f9f75bc3edc06f842dd16071465544198bc045\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/zstd-jni-1.5.5-6.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/lz4-java-1.8.0.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/snappy-java-1.1.10.5.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/slf4j-api-1.7.36.jar
2024-07-03T19:46:50.451+07:00  INFO 13808 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-03T19:46:50.452+07:00  INFO 13808 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-03T19:46:52.211+07:00  INFO 13808 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T19:46:52.213+07:00  INFO 13808 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T19:46:52.431+07:00  INFO 13808 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 204 ms. Found 10 JPA repository interfaces.
2024-07-03T19:46:52.451+07:00  INFO 13808 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T19:46:52.452+07:00  INFO 13808 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T19:46:52.468+07:00  INFO 13808 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:46:52.469+07:00  INFO 13808 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:46:52.469+07:00  INFO 13808 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:46:52.469+07:00  INFO 13808 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:46:52.469+07:00  INFO 13808 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:46:52.470+07:00  INFO 13808 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:46:52.470+07:00  INFO 13808 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:46:52.470+07:00  INFO 13808 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:46:52.470+07:00  INFO 13808 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:46:52.470+07:00  INFO 13808 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:46:52.470+07:00  INFO 13808 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-07-03T19:46:52.953+07:00  INFO 13808 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=af9bf09b-d2a7-375a-b7fb-d5856cb9df81
2024-07-03T19:46:53.473+07:00  WARN 13808 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T19:46:53.485+07:00  WARN 13808 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T19:46:54.044+07:00  INFO 13808 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T19:46:54.059+07:00  INFO 13808 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T19:46:54.059+07:00  INFO 13808 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T19:46:54.143+07:00  INFO 13808 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T19:46:54.143+07:00  INFO 13808 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3691 ms
2024-07-03T19:46:55.216+07:00  INFO 13808 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T19:46:55.247+07:00  INFO 13808 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-03T19:46:55.395+07:00  INFO 13808 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@56505fcb
2024-07-03T19:46:55.397+07:00  INFO 13808 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-03T19:46:57.574+07:00  INFO 13808 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T19:46:58.172+07:00  INFO 13808 --- [individual-service] [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-03T19:46:59.189+07:00  WARN 13808 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T19:46:59.320+07:00  INFO 13808 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T19:46:59.392+07:00  INFO 13808 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T19:47:01.318+07:00  INFO 13808 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T19:47:01.382+07:00  WARN 13808 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T19:47:01.408+07:00  INFO 13808 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T19:47:01.533+07:00  INFO 13808 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T19:47:01.587+07:00  INFO 13808 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T19:47:01.590+07:00  INFO 13808 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T19:47:01.611+07:00  INFO 13808 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T19:47:01.612+07:00  INFO 13808 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T19:47:01.612+07:00  INFO 13808 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T19:47:01.612+07:00  INFO 13808 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T19:47:01.612+07:00  INFO 13808 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T19:47:01.612+07:00  INFO 13808 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T19:47:01.612+07:00  INFO 13808 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T19:47:01.681+07:00  INFO 13808 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T19:47:01.683+07:00  INFO 13808 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T19:47:01.685+07:00  INFO 13808 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T19:47:01.690+07:00  INFO 13808 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720010821690 with initial instances count: 4
2024-07-03T19:47:01.700+07:00  INFO 13808 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T19:47:01.701+07:00  INFO 13808 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720010821701, current=UP, previous=STARTING]
2024-07-03T19:47:01.703+07:00  INFO 13808 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T19:47:01.719+07:00  INFO 13808 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T19:47:01.720+07:00  INFO 13808 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T19:47:01.739+07:00  INFO 13808 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 13.408 seconds (process running for 14.521)
2024-07-03T19:47:01.749+07:00  INFO 13808 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T19:47:02.330+07:00  INFO 13808 --- [individual-service] [RMI TCP Connection(5)-172.16.100.12] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-03T19:47:58.273+07:00  WARN 13808 --- [individual-service] [http-nio-9002-exec-1] PageModule$PlainPageSerializationWarning : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2024-07-03T19:52:01.627+07:00  INFO 13808 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T19:52:58.131+07:00  INFO 13808 --- [individual-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T19:52:58.132+07:00  INFO 13808 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720011178132, current=DOWN, previous=UP]
2024-07-03T19:52:58.132+07:00  INFO 13808 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T19:52:58.154+07:00  INFO 13808 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T19:52:58.165+07:00  INFO 13808 --- [individual-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T19:52:58.169+07:00  INFO 13808 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-03T19:52:58.173+07:00  INFO 13808 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-03T19:52:58.174+07:00  INFO 13808 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T19:53:01.183+07:00  INFO 13808 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T19:53:01.203+07:00  INFO 13808 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T19:53:01.212+07:00  INFO 13808 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T19:53:08.679+07:00  INFO 25152 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 25152 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T19:53:08.682+07:00  INFO 25152 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T19:53:08.745+07:00  INFO 25152 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T19:53:08.745+07:00  INFO 25152 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T19:53:08.751+07:00  INFO 25152 --- [individual-service] [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\tuank\.gradle\caches\modules-2\files-2.1\org.apache.kafka\kafka-clients\3.7.0\b8f9f75bc3edc06f842dd16071465544198bc045\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/zstd-jni-1.5.5-6.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/lz4-java-1.8.0.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/snappy-java-1.1.10.5.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/slf4j-api-1.7.36.jar
2024-07-03T19:53:08.751+07:00  INFO 25152 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-03T19:53:08.752+07:00  INFO 25152 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-03T19:53:10.575+07:00  INFO 25152 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T19:53:10.577+07:00  INFO 25152 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T19:53:10.816+07:00  INFO 25152 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 220 ms. Found 10 JPA repository interfaces.
2024-07-03T19:53:10.840+07:00  INFO 25152 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T19:53:10.842+07:00  INFO 25152 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T19:53:10.859+07:00  INFO 25152 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:53:10.859+07:00  INFO 25152 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:53:10.859+07:00  INFO 25152 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:53:10.859+07:00  INFO 25152 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:53:10.860+07:00  INFO 25152 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:53:10.860+07:00  INFO 25152 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:53:10.860+07:00  INFO 25152 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:53:10.860+07:00  INFO 25152 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:53:10.860+07:00  INFO 25152 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:53:10.860+07:00  INFO 25152 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T19:53:10.861+07:00  INFO 25152 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-07-03T19:53:11.339+07:00  INFO 25152 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=af9bf09b-d2a7-375a-b7fb-d5856cb9df81
2024-07-03T19:53:11.818+07:00  WARN 25152 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T19:53:11.827+07:00  WARN 25152 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T19:53:12.377+07:00  INFO 25152 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T19:53:12.390+07:00  INFO 25152 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T19:53:12.390+07:00  INFO 25152 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T19:53:12.484+07:00  INFO 25152 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T19:53:12.485+07:00  INFO 25152 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3731 ms
2024-07-03T19:53:13.458+07:00  INFO 25152 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T19:53:13.488+07:00  INFO 25152 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-03T19:53:13.640+07:00  INFO 25152 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2c98054a
2024-07-03T19:53:13.642+07:00  INFO 25152 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-03T19:53:15.973+07:00  INFO 25152 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T19:53:16.683+07:00  INFO 25152 --- [individual-service] [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-03T19:53:18.670+07:00  WARN 25152 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T19:53:18.788+07:00  INFO 25152 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T19:53:18.879+07:00  INFO 25152 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T19:53:20.869+07:00  INFO 25152 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T19:53:20.932+07:00  WARN 25152 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T19:53:20.958+07:00  INFO 25152 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T19:53:21.091+07:00  INFO 25152 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T19:53:21.130+07:00  INFO 25152 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T19:53:21.135+07:00  INFO 25152 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T19:53:21.157+07:00  INFO 25152 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T19:53:21.157+07:00  INFO 25152 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T19:53:21.157+07:00  INFO 25152 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T19:53:21.157+07:00  INFO 25152 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T19:53:21.157+07:00  INFO 25152 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T19:53:21.157+07:00  INFO 25152 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T19:53:21.157+07:00  INFO 25152 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T19:53:21.236+07:00  INFO 25152 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T19:53:21.238+07:00  INFO 25152 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T19:53:21.241+07:00  INFO 25152 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T19:53:21.246+07:00  INFO 25152 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720011201246 with initial instances count: 4
2024-07-03T19:53:21.257+07:00  INFO 25152 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T19:53:21.259+07:00  INFO 25152 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720011201259, current=UP, previous=STARTING]
2024-07-03T19:53:21.261+07:00  INFO 25152 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T19:53:21.287+07:00  INFO 25152 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T19:53:21.288+07:00  INFO 25152 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T19:53:21.317+07:00  INFO 25152 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 14.524 seconds (process running for 15.637)
2024-07-03T19:53:21.343+07:00  INFO 25152 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T19:53:21.829+07:00  INFO 25152 --- [individual-service] [RMI TCP Connection(3)-172.16.100.12] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-03T19:54:51.942+07:00  WARN 25152 --- [individual-service] [http-nio-9002-exec-3] PageModule$PlainPageSerializationWarning : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2024-07-03T19:58:21.172+07:00  INFO 25152 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T20:00:08.887+07:00  INFO 25152 --- [individual-service] [SpringApplicationShutdownHook] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T20:00:08.888+07:00  INFO 25152 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720011608888, current=DOWN, previous=UP]
2024-07-03T20:00:08.889+07:00  INFO 25152 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T20:00:08.907+07:00  INFO 25152 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T20:00:08.954+07:00  INFO 25152 --- [individual-service] [SpringApplicationShutdownHook] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T20:00:08.957+07:00  INFO 25152 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-03T20:00:08.963+07:00  INFO 25152 --- [individual-service] [SpringApplicationShutdownHook] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-03T20:00:08.964+07:00  INFO 25152 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T20:00:11.974+07:00  INFO 25152 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T20:00:11.994+07:00  INFO 25152 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T20:00:12.002+07:00  INFO 25152 --- [individual-service] [SpringApplicationShutdownHook] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T20:00:18.697+07:00  INFO 17964 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 17964 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T20:00:18.699+07:00  INFO 17964 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T20:00:18.777+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T20:00:18.777+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T20:00:18.787+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\tuank\.gradle\caches\modules-2\files-2.1\org.apache.kafka\kafka-clients\3.7.0\b8f9f75bc3edc06f842dd16071465544198bc045\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/zstd-jni-1.5.5-6.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/lz4-java-1.8.0.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/snappy-java-1.1.10.5.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/slf4j-api-1.7.36.jar
2024-07-03T20:00:18.787+07:00  INFO 17964 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-03T20:00:18.788+07:00  INFO 17964 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-03T20:00:20.539+07:00  INFO 17964 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T20:00:20.540+07:00  INFO 17964 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T20:00:20.762+07:00  INFO 17964 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 208 ms. Found 10 JPA repository interfaces.
2024-07-03T20:00:20.782+07:00  INFO 17964 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T20:00:20.784+07:00  INFO 17964 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T20:00:20.805+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:00:20.806+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:00:20.806+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:00:20.806+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:00:20.806+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:00:20.807+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:00:20.807+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:00:20.807+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:00:20.807+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:00:20.807+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:00:20.807+07:00  INFO 17964 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2024-07-03T20:00:21.273+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=af9bf09b-d2a7-375a-b7fb-d5856cb9df81
2024-07-03T20:00:21.716+07:00  WARN 17964 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T20:00:21.721+07:00  WARN 17964 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T20:00:22.201+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T20:00:22.214+07:00  INFO 17964 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T20:00:22.214+07:00  INFO 17964 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T20:00:22.283+07:00  INFO 17964 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T20:00:22.283+07:00  INFO 17964 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 3495 ms
2024-07-03T20:00:23.291+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T20:00:23.331+07:00  INFO 17964 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-03T20:00:23.492+07:00  INFO 17964 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7e1a3aff
2024-07-03T20:00:23.493+07:00  INFO 17964 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-03T20:00:25.858+07:00  INFO 17964 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T20:00:26.531+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-03T20:00:27.562+07:00  WARN 17964 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T20:00:27.690+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T20:00:27.764+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T20:00:29.680+07:00  INFO 17964 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T20:00:29.741+07:00  WARN 17964 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T20:00:29.768+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T20:00:29.896+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T20:00:29.937+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T20:00:29.941+07:00  INFO 17964 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T20:00:29.964+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T20:00:29.964+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T20:00:29.964+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T20:00:29.964+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T20:00:29.965+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T20:00:29.965+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T20:00:29.965+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T20:00:30.037+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T20:00:30.039+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T20:00:30.041+07:00  INFO 17964 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T20:00:30.046+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720011630046 with initial instances count: 4
2024-07-03T20:00:30.055+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T20:00:30.059+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720011630059, current=UP, previous=STARTING]
2024-07-03T20:00:30.061+07:00  INFO 17964 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T20:00:30.083+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T20:00:30.084+07:00  INFO 17964 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T20:00:30.104+07:00  INFO 17964 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 13.028 seconds (process running for 14.054)
2024-07-03T20:00:30.112+07:00  INFO 17964 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T20:00:30.568+07:00  INFO 17964 --- [individual-service] [RMI TCP Connection(4)-172.16.100.12] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-03T20:02:36.693+07:00  WARN 17964 --- [individual-service] [http-nio-9002-exec-1] PageModule$PlainPageSerializationWarning : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2024-07-03T20:05:29.973+07:00  INFO 17964 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T20:07:19.738+07:00  INFO 17964 --- [individual-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 105 class path changes (0 additions, 105 deletions, 0 modifications)
2024-07-03T20:07:19.740+07:00  INFO 17964 --- [individual-service] [Thread-5] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T20:07:19.740+07:00  INFO 17964 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720012039740, current=DOWN, previous=UP]
2024-07-03T20:07:19.740+07:00  INFO 17964 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T20:07:19.752+07:00  INFO 17964 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T20:07:19.768+07:00  INFO 17964 --- [individual-service] [Thread-5] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T20:07:19.772+07:00  INFO 17964 --- [individual-service] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown initiated...
2024-07-03T20:07:19.777+07:00  INFO 17964 --- [individual-service] [Thread-5] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Shutdown completed.
2024-07-03T20:07:19.779+07:00  INFO 17964 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T20:07:22.789+07:00  INFO 17964 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T20:07:22.806+07:00  INFO 17964 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T20:07:22.812+07:00  INFO 17964 --- [individual-service] [Thread-5] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T20:07:23.087+07:00  INFO 17964 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 17964 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T20:07:23.087+07:00  INFO 17964 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T20:07:23.090+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T20:07:23.090+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T20:07:23.900+07:00  INFO 17964 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T20:07:23.901+07:00  INFO 17964 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T20:07:23.944+07:00  INFO 17964 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 43 ms. Found 10 JPA repository interfaces.
2024-07-03T20:07:23.947+07:00  INFO 17964 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T20:07:23.948+07:00  INFO 17964 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T20:07:23.954+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:23.955+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:23.955+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:23.955+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:23.955+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:23.955+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:23.955+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:23.956+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:23.956+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:23.956+07:00  INFO 17964 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:23.956+07:00  INFO 17964 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2024-07-03T20:07:24.131+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=af9bf09b-d2a7-375a-b7fb-d5856cb9df81
2024-07-03T20:07:24.193+07:00  WARN 17964 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T20:07:24.195+07:00  WARN 17964 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T20:07:24.355+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T20:07:24.355+07:00  INFO 17964 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T20:07:24.355+07:00  INFO 17964 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T20:07:24.392+07:00  INFO 17964 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T20:07:24.392+07:00  INFO 17964 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 1302 ms
2024-07-03T20:07:24.667+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T20:07:24.669+07:00  INFO 17964 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2024-07-03T20:07:24.696+07:00  INFO 17964 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection org.postgresql.jdbc.PgConnection@2166b0cf
2024-07-03T20:07:24.696+07:00  INFO 17964 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2024-07-03T20:07:25.169+07:00  INFO 17964 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T20:07:25.638+07:00  WARN 17964 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T20:07:25.715+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T20:07:25.749+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T20:07:26.734+07:00  INFO 17964 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T20:07:26.779+07:00  WARN 17964 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T20:07:26.796+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T20:07:26.848+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T20:07:26.853+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T20:07:26.853+07:00  INFO 17964 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T20:07:26.860+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T20:07:26.861+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T20:07:26.861+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T20:07:26.861+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T20:07:26.861+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T20:07:26.861+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T20:07:26.861+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T20:07:26.893+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T20:07:26.895+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T20:07:26.896+07:00  INFO 17964 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T20:07:26.897+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720012046897 with initial instances count: 5
2024-07-03T20:07:26.906+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T20:07:26.906+07:00  INFO 17964 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720012046906, current=UP, previous=STARTING]
2024-07-03T20:07:26.906+07:00  INFO 17964 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T20:07:26.908+07:00  INFO 17964 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T20:07:26.909+07:00  INFO 17964 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T20:07:26.918+07:00  INFO 17964 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T20:07:26.920+07:00  INFO 17964 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 3.967 seconds (process running for 430.87)
2024-07-03T20:07:26.923+07:00  INFO 17964 --- [individual-service] [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2024-07-03T20:07:28.183+07:00  INFO 17964 --- [individual-service] [File Watcher] rtingClassPathChangeChangedEventListener : Restarting due to 105 class path changes (105 additions, 0 deletions, 0 modifications)
2024-07-03T20:07:28.185+07:00  INFO 17964 --- [individual-service] [Thread-9] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application INDIVIDUAL-SERVICE with eureka with status DOWN
2024-07-03T20:07:28.185+07:00  INFO 17964 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720012048185, current=DOWN, previous=UP]
2024-07-03T20:07:28.185+07:00  INFO 17964 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T20:07:28.194+07:00  INFO 17964 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T20:07:28.210+07:00  INFO 17964 --- [individual-service] [Thread-9] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T20:07:28.211+07:00  INFO 17964 --- [individual-service] [Thread-9] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown initiated...
2024-07-03T20:07:28.217+07:00  INFO 17964 --- [individual-service] [Thread-9] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Shutdown completed.
2024-07-03T20:07:28.219+07:00  INFO 17964 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2024-07-03T20:07:31.234+07:00  INFO 17964 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Unregistering ...
2024-07-03T20:07:31.254+07:00  INFO 17964 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - deregister  status: 200
2024-07-03T20:07:31.257+07:00  INFO 17964 --- [individual-service] [Thread-9] com.netflix.discovery.DiscoveryClient    : Completed shut down of DiscoveryClient
2024-07-03T20:07:36.137+07:00  INFO 5452 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Starting IndividualServiceApplication using Java 21.0.3 with PID 5452 (C:\Users\tuank\code\tlum\server\individual-service\build\classes\java\main started by tuank in C:\Users\tuank\code\tlum\server)
2024-07-03T20:07:36.140+07:00  INFO 5452 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : The following 1 profile is active: "dev"
2024-07-03T20:07:36.264+07:00  INFO 5452 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Fetching config from server at : http://tuank.mshome.net:8888/
2024-07-03T20:07:36.264+07:00  INFO 5452 --- [individual-service] [restartedMain] o.s.c.c.c.ConfigServerConfigDataLoader   : Located environment: name=auth-service,file-service, profiles=[dev], label=null, version=null, state=null
2024-07-03T20:07:36.273+07:00  INFO 5452 --- [individual-service] [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in C:\Users\tuank\.gradle\caches\modules-2\files-2.1\org.apache.kafka\kafka-clients\3.7.0\b8f9f75bc3edc06f842dd16071465544198bc045\kafka-clients-3.7.0.jar referenced one or more files that do not exist: file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/zstd-jni-1.5.5-6.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/lz4-java-1.8.0.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/snappy-java-1.1.10.5.jar,file:/C:/Users/tuank/.gradle/caches/modules-2/files-2.1/org.apache.kafka/kafka-clients/3.7.0/b8f9f75bc3edc06f842dd16071465544198bc045/slf4j-api-1.7.36.jar
2024-07-03T20:07:36.273+07:00  INFO 5452 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2024-07-03T20:07:36.280+07:00  INFO 5452 --- [individual-service] [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2024-07-03T20:07:38.273+07:00  INFO 5452 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T20:07:38.278+07:00  INFO 5452 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-03T20:07:38.513+07:00  INFO 5452 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 220 ms. Found 10 JPA repository interfaces.
2024-07-03T20:07:38.533+07:00  INFO 5452 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2024-07-03T20:07:38.533+07:00  INFO 5452 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2024-07-03T20:07:38.553+07:00  INFO 5452 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.DocumentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:38.553+07:00  INFO 5452 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.MajorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:38.553+07:00  INFO 5452 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.PermissionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:38.553+07:00  INFO 5452 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.RoleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:38.553+07:00  INFO 5452 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:38.553+07:00  INFO 5452 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyClassRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:38.553+07:00  INFO 5452 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.StudyDepartmentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:38.553+07:00  INFO 5452 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.SubjectRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:38.553+07:00  INFO 5452 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.TeacherRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:38.553+07:00  INFO 5452 --- [individual-service] [restartedMain] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.kltn.individualservice.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2024-07-03T20:07:38.553+07:00  INFO 5452 --- [individual-service] [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2024-07-03T20:07:39.013+07:00  INFO 5452 --- [individual-service] [restartedMain] o.s.cloud.context.scope.GenericScope     : BeanFactory id=af9bf09b-d2a7-375a-b7fb-d5856cb9df81
2024-07-03T20:07:39.523+07:00  WARN 5452 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-07-03T20:07:39.549+07:00  WARN 5452 --- [individual-service] [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-07-03T20:07:40.213+07:00  INFO 5452 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 9002 (http)
2024-07-03T20:07:40.223+07:00  INFO 5452 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2024-07-03T20:07:40.226+07:00  INFO 5452 --- [individual-service] [restartedMain] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.24]
2024-07-03T20:07:40.323+07:00  INFO 5452 --- [individual-service] [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2024-07-03T20:07:40.328+07:00  INFO 5452 --- [individual-service] [restartedMain] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4048 ms
2024-07-03T20:07:41.503+07:00  INFO 5452 --- [individual-service] [restartedMain] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-03T20:07:41.536+07:00  INFO 5452 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-07-03T20:07:41.699+07:00  INFO 5452 --- [individual-service] [restartedMain] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4dd32255
2024-07-03T20:07:41.700+07:00  INFO 5452 --- [individual-service] [restartedMain] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-07-03T20:07:43.753+07:00  INFO 5452 --- [individual-service] [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-03T20:07:44.603+07:00  INFO 5452 --- [individual-service] [restartedMain] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-03T20:07:45.713+07:00  WARN 5452 --- [individual-service] [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-03T20:07:45.913+07:00  INFO 5452 --- [individual-service] [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2024-07-03T20:07:45.993+07:00  INFO 5452 --- [individual-service] [restartedMain] o.s.c.openfeign.FeignClientFactoryBean   : For 'file-service' URL not provided. Will try picking an instance via load-balancing.
2024-07-03T20:07:48.138+07:00  INFO 5452 --- [individual-service] [restartedMain] DiscoveryClientOptionalArgsConfiguration : Eureka HTTP Client uses RestTemplate.
2024-07-03T20:07:48.213+07:00  WARN 5452 --- [individual-service] [restartedMain] iguration$LoadBalancerCaffeineWarnLogger : Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2024-07-03T20:07:48.266+07:00  INFO 5452 --- [individual-service] [restartedMain] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 19 endpoints beneath base path '/actuator'
2024-07-03T20:07:48.417+07:00  INFO 5452 --- [individual-service] [restartedMain] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2024-07-03T20:07:48.456+07:00  INFO 5452 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2024-07-03T20:07:48.460+07:00  INFO 5452 --- [individual-service] [restartedMain] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T20:07:48.487+07:00  INFO 5452 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2024-07-03T20:07:48.488+07:00  INFO 5452 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2024-07-03T20:07:48.488+07:00  INFO 5452 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2024-07-03T20:07:48.488+07:00  INFO 5452 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application is null : false
2024-07-03T20:07:48.488+07:00  INFO 5452 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2024-07-03T20:07:48.489+07:00  INFO 5452 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2024-07-03T20:07:48.489+07:00  INFO 5452 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2024-07-03T20:07:48.610+07:00  INFO 5452 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : The response status is 200
2024-07-03T20:07:48.614+07:00  INFO 5452 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2024-07-03T20:07:48.617+07:00  INFO 5452 --- [individual-service] [restartedMain] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2024-07-03T20:07:48.624+07:00  INFO 5452 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1720012068623 with initial instances count: 4
2024-07-03T20:07:48.635+07:00  INFO 5452 --- [individual-service] [restartedMain] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application INDIVIDUAL-SERVICE with eureka with status UP
2024-07-03T20:07:48.636+07:00  INFO 5452 --- [individual-service] [restartedMain] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1720012068636, current=UP, previous=STARTING]
2024-07-03T20:07:48.638+07:00  INFO 5452 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002: registering service...
2024-07-03T20:07:48.655+07:00  INFO 5452 --- [individual-service] [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 9002 (http) with context path '/'
2024-07-03T20:07:48.656+07:00  INFO 5452 --- [individual-service] [restartedMain] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 9002
2024-07-03T20:07:48.676+07:00  INFO 5452 --- [individual-service] [restartedMain] c.k.i.IndividualServiceApplication       : Started IndividualServiceApplication in 14.338 seconds (process running for 15.362)
2024-07-03T20:07:48.686+07:00  INFO 5452 --- [individual-service] [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_INDIVIDUAL-SERVICE/tuank.mshome.net:individual-service:9002 - registration status: 204
2024-07-03T20:07:49.023+07:00  INFO 5452 --- [individual-service] [RMI TCP Connection(3)-172.16.100.12] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-03T20:08:41.498+07:00  WARN 5452 --- [individual-service] [http-nio-9002-exec-1] PageModule$PlainPageSerializationWarning : Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2024-07-03T20:11:25.557+07:00 ERROR 5452 --- [individual-service] [http-nio-9002-exec-10] c.k.i.u.e.GlobalExceptionHandler         : Has ERROR

org.springframework.beans.NullValueInNestedPathException: Invalid property 'employeeStatuses' of bean class [com.kltn.individualservice.dto.request.GetTeachersRequest]: Could not instantiate property type [com.kltn.individualservice.constant.EmployeeStatus] to auto-grow nested property path
	at org.springframework.beans.AbstractNestablePropertyAccessor.newValue(AbstractNestablePropertyAccessor.java:936) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.AbstractNestablePropertyAccessor.growCollectionIfNecessary(AbstractNestablePropertyAccessor.java:801) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyValue(AbstractNestablePropertyAccessor.java:658) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.AbstractNestablePropertyAccessor.getNestedPropertyAccessor(AbstractNestablePropertyAccessor.java:856) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.AbstractNestablePropertyAccessor.getPropertyAccessorForPropertyPath(AbstractNestablePropertyAccessor.java:831) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.AbstractNestablePropertyAccessor.setPropertyValue(AbstractNestablePropertyAccessor.java:256) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:104) ~[spring-beans-6.1.8.jar:6.1.8]
	at org.springframework.validation.DataBinder.applyPropertyValues(DataBinder.java:1220) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.validation.DataBinder.doBind(DataBinder.java:1112) ~[spring-context-6.1.8.jar:6.1.8]
	at org.springframework.web.bind.WebDataBinder.doBind(WebDataBinder.java:235) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.bind.ServletRequestDataBinder.bind(ServletRequestDataBinder.java:169) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor.bindRequestParameters(ServletModelAttributeMethodProcessor.java:168) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:153) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:224) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:178) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.24.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.8.jar:6.1.8]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.24.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.8.jar:6.1.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.8.jar:6.1.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.8.jar:6.1.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.8.jar:6.1.8]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.8.jar:6.1.8]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63) ~[tomcat-embed-core-10.1.24.jar:10.1.24]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: java.lang.NoSuchMethodException: com.kltn.individualservice.constant.EmployeeStatus.<init>()
	at java.base/java.lang.Class.getConstructor0(Class.java:3761) ~[na:na]
	at java.base/java.lang.Class.getDeclaredConstructor(Class.java:2930) ~[na:na]
	at org.springframework.beans.AbstractNestablePropertyAccessor.newValue(AbstractNestablePropertyAccessor.java:927) ~[spring-beans-6.1.8.jar:6.1.8]
	... 63 common frames omitted

2024-07-03T20:12:48.499+07:00  INFO 5452 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2024-07-03T20:17:48.513+07:00  INFO 5452 --- [individual-service] [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
